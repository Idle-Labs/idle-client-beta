{"version":3,"sources":["RoundButton/RoundButton.js","ExtLink/ExtLink.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","SmartNumber/SmartNumber.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","CustomList/CustomList.js","FlexLoader/FlexLoader.js","Title/Title.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["RoundButton","buttonProps","Object","assign","width","fontSize","fontWeight","height","boxShadow","borderRadius","mainColor","this","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","Component","ExtLink","target","rel","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","alignItems","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","iconName","text","length","ml","color","hoverColor","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","justifyContent","className","styles","mx","ButtonLoader","flexDirection","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","RoundIconButton","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","tokenName","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isActive","isDisabled","image","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","oldContract","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","_ref178","_callee109","protocolsAprs","_ref179","_ref180","tokenAllocations","govTokensBalances","_args109","_context109","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x191","getSushiswapPoolTokenPrice","_ref181","_callee110","pairAddresses","_ref182","_ref183","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref184","_ref185","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context110","getSushiswapConversionRate","_x192","_x193","_ref186","_callee111","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context111","_x194","_x195","_ref187","_callee112","unires","_context112","addressForPrice","_x196","_x197","getCurveDepositedTokens","_ref188","_callee113","idleTokensBalances","remainingCurveTokens","_args113","_context113","_x198","getCurveUnevenTokenAmounts","_ref189","_callee114","amounts","max_burn_amount","unevenAmounts","_context114","getCurveDepositContract","_x199","_x200","_callee115","curveRatesInfo","_context115","strategyTokens","getCurveAPYContract","_callee116","blocksForPrevTokenPrice","_ref192","_ref193","prevTokenPrice","blocksMultiplier","curveAPR","_context116","getCurveTokenSupply","_callee117","_context117","getCurvePoolContract","_callee118","_args118","_context118","_callee119","_args119","_context119","_ref197","_callee120","_ref198","_ref199","_context120","_x201","_callee121","depositContractInfo","_context121","getCurveZapContract","_callee122","zapContractInfo","_context122","_callee123","poolContractInfo","_context123","getCurveSwapContract","_callee124","migrationContractInfo","_context124","getCurveIdleTokensAmounts","_callee126","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args126","_context126","_ref205","_callee125","coinIndex","curveIdleTokens","_context125","migrationParams","_x202","getCurveTokensAmounts","_callee128","useCoinIndex","_args128","_context128","_ref207","_callee127","_ref208","_ref209","idleTokenPrice","totalTokenSupply","_context127","_x203","getCurveAmounts","_ref210","_callee130","_args130","_context130","_ref211","_callee129","_context129","_x206","_x204","_x205","getCurveTokenAmount","_ref212","_callee131","_args131","_context131","_x207","getCurveSlippage","_ref213","_callee132","uneven_amounts","depositContract","_ref214","_ref215","Sv","_args132","_context132","_x208","_x209","_ref216","_callee133","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref217","_ref218","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args133","_context133","_x210","_callee135","_args135","_context135","_ref220","_callee134","_ref221","_ref222","_context134","_x211","getStkAaveApr","_ref223","_callee136","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args136","_context136","_x212","_x213","getCompAPR","_ref224","_callee137","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args137","_context137","_x214","_x215","getCompSpeed","_ref225","_callee138","cTokenAddress","compSpeed","_context138","_x216","_ref226","_callee139","cTokenInfo","compoundAllocationPerc","_ref227","_ref228","cTokenTotalSupply","compoundPoolShare","_args139","_context139","_x217","_callee141","_args141","_context141","_ref230","_callee140","_ref231","_ref232","_context140","_x218","_callee143","_args143","_context143","_ref234","_callee142","_ref235","_ref236","compApr","_context142","_x219","getTokensCsv","_callee146","csv","_context146","prototype","sum","pv","cv","avg","_ref238","_callee145","strategy","_context145","_ref239","_callee144","header","aprAvg","scoreAvg","lastRow","_context144","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x221","_x220","_callee148","govToken","convertToken","_args148","_context148","_ref241","_callee147","compTokenBalance","_context147","_x222","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref242","_callee150","govTokensUserDistribution","_args150","_context150","_ref243","_callee149","_context149","_x224","_x223","_ref244","_callee152","govTokensDistribution","tokenGovTokens","_args152","_context152","_ref245","_callee151","govSpeed","_context151","_x226","_x225","getGovTokensAprs","_ref246","_callee154","govTokensAprs","_args154","_context154","_ref247","_callee153","_ref248","_ref249","_ref250","_ref251","cTokenConfig","_context153","aprTooltipMode","_x229","_x227","_x228","_callee156","_args156","_context156","_ref253","_callee155","govTokenBalance","tokenConversionRate","fromTokenConfig","_context155","_x230","_callee157","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args157","_context157","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref255","_callee159","govTokensAmounts","_context159","getGovTokensUserAmounts","_ref256","_callee158","_context158","getGovTokenAddessByIndex","_x233","_x234","_x231","_x232","_ref257","_callee160","_context160","_x235","_x236","_ref258","_callee161","_context161","_x237","_x238","_callee164","govTokenConfigForced","_args164","_context164","_ref260","_callee163","_context163","_ref261","_callee162","_context162","_x240","_x241","_x239","getTokenFees","_callee165","_args165","_context165","_callee166","_ref264","_ref265","feePercentage","gain","fees","_args166","_context166","_ref266","_callee167","_args167","_context167","_x242","getTotalTVL","_callee168","tokensTVL","_context168","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee172","_context172","_ref269","_callee171","_context171","_ref270","_callee170","oldTokenTVL","idleTokenName","_ref271","_ref272","oldTokenConfig","_ref276","_ref277","oldTokenPrice","oldTotalSupply","_context170","showAUM","_ref273","_callee169","_ref274","_ref275","govTokenConversionRate","govTokenBalanceConverted","_context169","_x245","oldProtocols","oldProtocol","protocolPos","_x244","_x243","getSubstackLatestFeed","_callee173","endpointInfo","idleSubstackFeed","latestFeed","_context173","items","getAggregatedStats","_callee174","tvls","totalAUM","_args174","_context174","getAggregatedStats_chain","_callee178","avgAPR","_args178","_context178","_ref281","_callee177","_context177","_ref282","_callee176","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context176","_ref283","_callee175","_ref284","_ref285","_context175","_x248","_x247","_x246","getTokenApy","_ref286","_callee179","_context179","_x249","getTokensToMigrate","_callee182","tokensToMigrate","_args182","_context182","_ref288","_callee181","_context181","_ref289","_callee180","_ref290","_context180","_x251","_x250","getProtocolsTokensBalances","_callee184","tokenBalances","minTokenBalance","protocolsTokens","_args184","_context184","_ref292","_callee183","tokenContract","_context183","_x252","_ref293","_callee185","_args185","_context185","_x253","_x254","_x255","getAvgAPYStats","_ref294","_callee186","apiResults","_args186","_context186","_x256","_x257","_ref295","_callee187","count","_conversionRate","_args187","_context187","_x258","_x259","getTokenScore","_ref296","_callee188","_ref297","_ref298","tokenScore","_context188","protocolScore","getTokenScoreApi","_x260","_x261","_ref299","_callee189","scores","_context189","_x262","_x263","_ref300","_callee190","idleGovTokenShowAPR","idleAPR","_args190","_context190","_x264","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imageSrc","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","required","checked","togglePermitEnabled","approveDescription","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","baseName","showTooltip","long","features","feature","aligItems","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descShort","descLong","best","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","defiScoreDisabled","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.c257882d.chunk.js","sourcesContent":["import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision)+` ${tokenName}` }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    const [\n      unlentBalance,\n      tokenPrice,\n      tokenUsdConversionRate,\n      totalSupply,\n      tokenAllocations,\n      govTokensBalances,\n      allAvailableTokens\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      this.genericContractCallCached(tokenConfig.idle.token,'getAllocations'),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n      this.genericContractCallCached(tokenConfig.idle.token,'getAllAvailableTokens')\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (allAvailableTokens && tokenAllocations && allAvailableTokens.length === tokenAllocations.length){\n      allAvailableTokens.forEach( (protocolAddr,index) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(tokenAllocations[index]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Icon, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tokenConfig = this.props.tokenConfig || this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n    return (\n      <DashboardCard\n        cardProps={{\n          py:3,\n          px:3,\n          border:null,\n          height:'100%',\n          display:'flex',\n          flexDirection:'column'\n        }}\n      >\n        <Flex\n          pb={2}\n          mb={3}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-start','baseline']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.8em' : '2.2em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[4,6]}\n              lineHeight={'1'}\n              color={trancheDetails.color.hex}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            alignItems={'flex-end'}\n            flexDirection={'column'}\n          >\n            <TrancheField\n              fieldInfo={{\n                name:`${trancheDetails.baseName}Apy`,\n                showTooltip:false,\n                props:{\n                  decimals:2,\n                  fontWeight:4,\n                  fontSize:[4,6],\n                  lineHeight:'1',\n                  textAlign:'center',\n                  flexProps:{\n                    justifyContent:'center'\n                  },\n                  color:this.props.trancheDetails.color.hex\n                },\n              }}\n              {...this.props}\n              tokenConfig={tokenConfig}\n              token={strategyInfo.token}\n              tranche={strategyInfo.tranche}\n              protocol={strategyInfo.protocol}\n            />\n            <Text\n              fontSize={0}\n              color={'cellText'}\n              textAlign={'right'}\n            >\n              Current APY (variable)\n            </Text>\n            {\n              /*\n              <TrancheField\n                fieldInfo={{\n                  showLoader:false,\n                  name:'trancheIDLEDistribution',\n                  props:{\n                    decimals:2,\n                    fontWeight:2,\n                    fontSize:[0,1],\n                    color:'cellText',\n                    textAlign:'center',\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  },\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                token={strategyInfo.token}\n                trancheConfig={tokenConfig.AA}\n                tranche={strategyInfo.tranche}\n                protocol={strategyInfo.protocol}\n              />\n              */\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={'100%'}\n          flexDirection={'column'}\n        >\n          <Text\n            mb={3}\n            fontWeight={3}\n            color={'copyColor'}\n          >\n            {trancheDetails.description.long}\n          </Text>\n          <Flex\n            width={1}\n            my={3}\n            flexDirection={'column'}\n          >\n            {\n              trancheDetails.features.map( (feature,index) => (\n                <Flex\n                  mb={2}\n                  width={1}\n                  mt={[0,1]}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    name={'Done'}\n                    color={trancheDetails.color.hex}\n                  />\n                  <Text\n                    fontWeight={3}\n                    fontSize={[2,3]}\n                    color={trancheDetails.color.hex}\n                  >\n                    {feature}\n                  </Text>\n                </Flex>\n              ))\n            }\n          </Flex>\n          <Flex\n            height={'100%'}\n            alignItems={'flex-end'}\n          >\n            <Button\n              mt={3}\n              width={1}\n              contrastColor={'cardBg'}\n              icon={trancheDetails.icon}\n              mainColor={trancheDetails.color.hex}\n              onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n            >\n              {\n                this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`\n              }\n            </Button>\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text } from \"rimble-ui\";\nimport TrancheBox from '../TrancheBox/TrancheBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    return (\n      <Box\n        mb={3}\n        width={1}\n      >\n        {\n          !this.props.tokenConfig ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Title\n                mb={3}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                width={1}\n                mb={[3,4]}\n                mx={'auto'}\n                aligItems={'center'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontWeight={2}\n                  fontSize={[1,2]}\n                  textAlign={'center'}\n                >\n                  {\n                    this.props.isMobile ?\n                      this.functionsUtil.getGlobalConfig(['strategies','tranches','descShort'])\n                    :\n                      this.functionsUtil.getGlobalConfig(['strategies','tranches','descLong'])\n                  }\n                </Text>\n              </Flex>\n            </Flex>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3,4]}\n              color={'copyColor'}\n              textAlign={'center'}\n            >\n              Select your preferred Tranche\n            </Title>\n          )\n        }\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          {\n            Object.keys(tranchesDetails).map( trancheType => (\n              <Flex\n                mb={[3,0]}\n                flexDirection={'column'}\n                key={`tranche_${trancheType}`}\n                width={[1,(1/Object.keys(tranchesDetails).length)-0.04]}\n              >\n                <Flex\n                  width={1}\n                  height={'100%'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <TrancheBox\n                    {...this.props}\n                    tokenConfig={this.props.tokenConfig}\n                    trancheDetails={tranchesDetails[trancheType]}\n                  />\n                </Flex>\n              </Flex>\n            ))\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={2}\n                      name={this.state.trancheDetails.icon}\n                      color={this.state.trancheDetails.color.hex}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v6.0',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Covered by Junior tranches funds',\n        'Minimized risk exposure',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds\\' coverage given by Junior Tranches',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches funds',\n        'Higher risk exposure by protecting senior tranches',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      component:Tranches,\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n      descShort:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.',\n      descLong:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles. A Junior tranche receives a larger portion of the yield generated by the underlying pool, and therefore a Senior tranche has a lower yield. This is because the senior tranches have first lien on the underlying assets – they are in line to be repaid first, in case of default (hack, loss of funds). Junior tranches have a second lien or no lien at all. These products allow to tranche a spectrum of risks related to underlying assets and smart contract failures. In this way, risk-tolerant users can get higher returns for taking an higher risk, while risk-averse users will receive protection in exchange of a share of their profits with their risk-tolerant equivalents.',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null,clear_all=false) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        // Clear cached data\n        this.clearCachedData(()=>{\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n          this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n        },true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}