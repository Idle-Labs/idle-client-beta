{"version":3,"sources":["ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","FlexLoader/FlexLoader.js","CustomField/CustomField.js","CustomList/CustomList.js","Title/Title.js","AssetField/AssetField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js"],"names":["ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","this","props","children","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","keys","length","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","tokenName","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isActive","isDisabled","image","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_ref20","_callee15","stakingRewards","tokensDistribution","_context15","_ref21","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref22","_ref23","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref24","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref25","_ref26","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref27","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref28","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref29","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref30","_callee20","_context20","_x20","_x21","_x22","_ref31","_callee21","_ref32","_ref33","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref38","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref39","_callee26","_args26","_context26","_x25","_ref40","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref41","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref42","_callee31","minedTxs","_context31","_ref43","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref44","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref45","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref46","_callee38","txsToProcess","_args38","_context38","_ref47","_callee37","_context37","_ref48","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref49","_callee33","_context33","txReceipt","_x39","_x40","_ref50","_callee34","_context34","_x41","_x42","oldContract","raw","_ref51","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref52","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref53","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref54","_callee41","return_data","_args41","_context41","_x47","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref56","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref57","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref58","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref60","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref61","_callee46","_context46","symbol","_x55","_x54","_ref62","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref63","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref64","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref67","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref68","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref69","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref70","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref71","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref72","_ref73","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref74","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref75","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref76","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref77","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref78","_callee64","_context64","_ref79","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref80","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref81","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref82","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref83","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref84","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref85","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref86","_callee71","contractAddr","walletAddr","_ref87","_ref88","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref89","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref90","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref91","_callee75","_context75","_ref92","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref93","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref94","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref95","_ref96","totalSupply","virtualPrice","_ref97","_ref98","staked1","lastPrice1","_ref99","_ref100","deposited1","lastPrice","_ref101","_ref102","redeemable1","staked2","_ref103","_ref104","trancheApy2","deposited3","_ref105","_ref106","trancheFee","_ref107","_ref108","deposited4","redeemable3","_ref109","_ref110","deposited2","redeemable2","_ref111","_ref112","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref113","_ref114","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref115","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref116","_ref117","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref118","_ref119","amountLentCurve1","redeemableBalanceCurve","_ref120","_ref121","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref122","_ref123","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref124","_ref125","tokenPriceFirstDeposit","_ref126","_ref127","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref128","_ref129","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref130","_ref131","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref132","_ref133","amountLentCurve2","redeemableBalanceCurve1","_ref134","_ref135","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref136","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref137","_callee80","_ref138","_ref139","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref140","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","useLocalStorage","expirationDate","_ref141","_callee82","_ref142","_ref143","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref145","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref146","_callee86","incidentsInfo","_ref147","_ref148","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref149","_callee85","cover","coverId","claimSubmittedEvent","_ref150","_ref151","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref152","_ref153","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref154","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref156","_callee88","currBatchIndex","batchIndex","_ref157","_ref158","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref159","_callee90","fixDecimals","_args90","_context90","_x161","_ref160","_callee91","_ref161","_ref162","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref163","_callee92","_args92","_context92","_x164","_ref164","_callee93","_args93","_context93","_x165","_ref165","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref166","_callee95","_context95","_x168","_x169","getAprs","_ref167","_callee96","_context96","addresses","_x170","genericIdleCall","_ref168","_callee97","callParams","_args97","_context97","_x171","_ref169","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref170","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref171","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref173","_callee102","_context102","getBlock","_x180","_ref174","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref175","_callee104","_args104","_context104","_x183","_x184","_ref176","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref177","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref178","_callee107","unlentBalance","_context107","_x189","_ref179","_callee108","_args108","_context108","_x190","_ref180","_callee110","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref184","_ref185","_args110","_context110","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref181","_callee109","_ref182","_ref183","protocolBalance","protocolAllocation","_context109","functions","_x192","_x193","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x191","getSushiswapPoolTokenPrice","_ref186","_callee111","pairAddresses","_ref187","_ref188","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref189","_ref190","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context111","getSushiswapConversionRate","_x194","_x195","_ref191","_callee112","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context112","_x196","_x197","_ref192","_callee113","unires","_context113","addressForPrice","_x198","_x199","getCurveDepositedTokens","_ref193","_callee114","idleTokensBalances","remainingCurveTokens","_args114","_context114","_x200","getCurveUnevenTokenAmounts","_ref194","_callee115","amounts","max_burn_amount","unevenAmounts","_context115","getCurveDepositContract","_x201","_x202","_callee116","curveRatesInfo","_context116","strategyTokens","getCurveAPYContract","_callee117","blocksForPrevTokenPrice","_ref197","_ref198","prevTokenPrice","blocksMultiplier","curveAPR","_context117","getCurveTokenSupply","_callee118","_context118","getCurvePoolContract","_callee119","_args119","_context119","_callee120","_args120","_context120","_ref202","_callee121","_ref203","_ref204","_context121","_x203","_callee122","depositContractInfo","_context122","getCurveZapContract","_callee123","zapContractInfo","_context123","_callee124","poolContractInfo","_context124","getCurveSwapContract","_callee125","migrationContractInfo","_context125","getCurveIdleTokensAmounts","_callee127","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args127","_context127","_ref210","_callee126","coinIndex","curveIdleTokens","_context126","migrationParams","_x204","getCurveTokensAmounts","_callee129","useCoinIndex","_args129","_context129","_ref212","_callee128","_ref213","_ref214","idleTokenPrice","totalTokenSupply","_context128","_x205","getCurveAmounts","_ref215","_callee131","_args131","_context131","_ref216","_callee130","_context130","_x208","_x206","_x207","getCurveTokenAmount","_ref217","_callee132","_args132","_context132","_x209","getCurveSlippage","_ref218","_callee133","uneven_amounts","depositContract","_ref219","_ref220","Sv","_args133","_context133","_x210","_x211","_ref221","_callee134","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref222","_ref223","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args134","_context134","_x212","_callee136","_args136","_context136","_ref225","_callee135","_ref226","_ref227","_context135","_x213","getStkAaveApr","_ref228","_callee137","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args137","_context137","_x214","_x215","getCompAPR","_ref229","_callee138","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args138","_context138","_x216","_x217","getCompSpeed","_ref230","_callee139","cTokenAddress","compSpeed","_context139","_x218","_ref231","_callee140","cTokenInfo","compoundAllocationPerc","_ref232","_ref233","cTokenTotalSupply","compoundPoolShare","_args140","_context140","_x219","_callee142","_args142","_context142","_ref235","_callee141","_ref236","_ref237","_context141","_x220","_callee144","_args144","_context144","_ref239","_callee143","_ref240","_ref241","compApr","_context143","_x221","getTokensCsv","_callee147","csv","_context147","prototype","sum","pv","cv","avg","_ref243","_callee146","strategy","_context146","_ref244","_callee145","header","aprAvg","scoreAvg","lastRow","_context145","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x223","_x222","_callee149","govToken","convertToken","_args149","_context149","_ref246","_callee148","compTokenBalance","_context148","_x224","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref247","_callee151","govTokensUserDistribution","_args151","_context151","_ref248","_callee150","_context150","_x226","_x225","_ref249","_callee153","govTokensDistribution","tokenGovTokens","_args153","_context153","_ref250","_callee152","govSpeed","_context152","_x228","_x227","getGovTokensAprs","_ref251","_callee155","govTokensAprs","_args155","_context155","_ref252","_callee154","_ref253","_ref254","_ref255","_ref256","cTokenConfig","_context154","aprTooltipMode","_x231","_x229","_x230","_callee157","_args157","_context157","_ref258","_callee156","govTokenBalance","tokenConversionRate","fromTokenConfig","_context156","_x232","_callee158","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args158","_context158","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref260","_callee160","govTokensAmounts","_context160","getGovTokensUserAmounts","_ref261","_callee159","_context159","getGovTokenAddessByIndex","_x235","_x236","_x233","_x234","_ref262","_callee161","_context161","_x237","_x238","_ref263","_callee162","_context162","_x239","_x240","_callee165","govTokenConfigForced","_args165","_context165","_ref265","_callee164","_context164","_ref266","_callee163","_context163","_x242","_x243","_x241","getTokenFees","_callee166","_args166","_context166","_callee167","_ref269","_ref270","feePercentage","gain","fees","_args167","_context167","_ref271","_callee168","_args168","_context168","_x244","getTotalTVL","_callee169","tokensTVL","_context169","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee173","_context173","_ref274","_callee172","_context172","_ref275","_callee171","oldTokenTVL","idleTokenName","_ref276","_ref277","oldTokenConfig","_ref281","_ref282","oldTokenPrice","oldTotalSupply","_context171","showAUM","_ref278","_callee170","_ref279","_ref280","govTokenConversionRate","govTokenBalanceConverted","_context170","_x247","oldProtocols","oldProtocol","protocolPos","_x246","_x245","getSubstackLatestFeed","_callee174","endpointInfo","idleSubstackFeed","latestFeed","_context174","items","getAggregatedStats","_callee175","tvls","totalAUM","_args175","_context175","getAggregatedStats_chain","_callee179","avgAPR","_args179","_context179","_ref286","_callee178","_context178","_ref287","_callee177","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context177","_ref288","_callee176","_ref289","_ref290","_context176","_x250","_x249","_x248","getTokenApy","_ref291","_callee180","_context180","_x251","getTokensToMigrate","_callee183","tokensToMigrate","_args183","_context183","_ref293","_callee182","_context182","_ref294","_callee181","_ref295","_context181","_x253","_x252","getProtocolsTokensBalances","_callee185","tokenBalances","minTokenBalance","protocolsTokens","_args185","_context185","_ref297","_callee184","tokenContract","_context184","_x254","_ref298","_callee186","_args186","_context186","_x255","_x256","_x257","getAvgAPYStats","_ref299","_callee187","apiResults","_args187","_context187","_x258","_x259","_ref300","_callee188","count","_conversionRate","_args188","_context188","_x260","_x261","getTokenScore","_ref301","_callee189","_ref302","_ref303","tokenScore","_context189","protocolScore","getTokenScoreApi","_x262","_x263","_ref304","_callee190","scores","_context190","_x264","_x265","_ref305","_callee193","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args193","_context193","_ref306","_callee192","addrIndex","protocolApr","protocolApy","govTokenAPR","_context192","_ref307","_callee191","_context191","_x269","_x267","_x268","_x266","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","selectToken","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","required","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","placeholder","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","flexWrap","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","BuyModal","showInline","availableMethods","buyToken","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","baseName","showTooltip","long","features","feature","aligItems","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","_this4","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","goBack","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descShort","descLong","best","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","_ref19","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.e73bb041.chunk.js","sourcesContent":["import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision)+` ${tokenName}` }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldInfo.props}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Link } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Icon, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n    const [\n      stakingRewards,\n      rewardTokensInfo\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    // console.log('stakingRewards',stakingRewards,rewardTokensInfo,trancheBalanceInfo);\n\n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      action:'Claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tokenConfig = this.props.tokenConfig || this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n    return (\n      <DashboardCard\n        cardProps={{\n          py:3,\n          px:3,\n          border:null,\n          height:'100%',\n          display:'flex',\n          flexDirection:'column'\n        }}\n      >\n        <Flex\n          pb={2}\n          mb={3}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-start','baseline']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.8em' : '2.2em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[4,6]}\n              lineHeight={'1'}\n              color={trancheDetails.color.hex}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            alignItems={'flex-end'}\n            flexDirection={'column'}\n          >\n            <TrancheField\n              fieldInfo={{\n                name:`${trancheDetails.baseName}Apy`,\n                showTooltip:false,\n                props:{\n                  decimals:2,\n                  fontWeight:4,\n                  fontSize:[4,6],\n                  lineHeight:'1',\n                  textAlign:'center',\n                  flexProps:{\n                    justifyContent:'center'\n                  },\n                  color:this.props.trancheDetails.color.hex\n                },\n              }}\n              {...this.props}\n              tokenConfig={tokenConfig}\n              token={strategyInfo.token}\n              tranche={strategyInfo.tranche}\n              protocol={strategyInfo.protocol}\n            />\n            <Text\n              fontSize={0}\n              color={'cellText'}\n              textAlign={'right'}\n            >\n              Current APY (variable)\n            </Text>\n            {\n              /*\n              <TrancheField\n                fieldInfo={{\n                  showLoader:false,\n                  name:'trancheIDLEDistribution',\n                  props:{\n                    decimals:2,\n                    fontWeight:2,\n                    fontSize:[0,1],\n                    color:'cellText',\n                    textAlign:'center',\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  },\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                token={strategyInfo.token}\n                trancheConfig={tokenConfig.AA}\n                tranche={strategyInfo.tranche}\n                protocol={strategyInfo.protocol}\n              />\n              */\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={'100%'}\n          flexDirection={'column'}\n        >\n          <Text\n            mb={3}\n            fontWeight={3}\n            color={'copyColor'}\n          >\n            {trancheDetails.description.long}\n          </Text>\n          <Flex\n            width={1}\n            my={3}\n            flexDirection={'column'}\n          >\n            {\n              trancheDetails.features.map( (feature,index) => (\n                <Flex\n                  mb={2}\n                  width={1}\n                  mt={[0,1]}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    name={'Done'}\n                    color={trancheDetails.color.hex}\n                  />\n                  <Text\n                    fontWeight={3}\n                    fontSize={[2,3]}\n                    color={trancheDetails.color.hex}\n                  >\n                    {feature}\n                  </Text>\n                </Flex>\n              ))\n            }\n          </Flex>\n          <Flex\n            height={'100%'}\n            alignItems={'flex-end'}\n          >\n            <Button\n              mt={3}\n              width={1}\n              contrastColor={'cardBg'}\n              icon={trancheDetails.icon}\n              mainColor={trancheDetails.color.hex}\n              onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n            >\n              {\n                this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`\n              }\n            </Button>\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text } from \"rimble-ui\";\nimport TrancheBox from '../TrancheBox/TrancheBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    return (\n      <Box\n        mb={3}\n        width={1}\n      >\n        {\n          !this.props.tokenConfig ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Title\n                mb={3}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                width={1}\n                mb={[3,4]}\n                mx={'auto'}\n                aligItems={'center'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontWeight={2}\n                  fontSize={[1,2]}\n                  textAlign={'center'}\n                >\n                  {\n                    this.props.isMobile ?\n                      this.functionsUtil.getGlobalConfig(['strategies','tranches','descShort'])\n                    :\n                      this.functionsUtil.getGlobalConfig(['strategies','tranches','descLong'])\n                  }\n                </Text>\n              </Flex>\n            </Flex>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3,4]}\n              color={'copyColor'}\n              textAlign={'center'}\n            >\n              Select your preferred Tranche\n            </Title>\n          )\n        }\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          {\n            Object.keys(tranchesDetails).map( trancheType => (\n              <Flex\n                mb={[3,0]}\n                flexDirection={'column'}\n                key={`tranche_${trancheType}`}\n                width={[1,(1/Object.keys(tranchesDetails).length)-0.04]}\n              >\n                <Flex\n                  width={1}\n                  height={'100%'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <TrancheBox\n                    {...this.props}\n                    tokenConfig={this.props.tokenConfig}\n                    trancheDetails={tranchesDetails[trancheType]}\n                  />\n                </Flex>\n              </Flex>\n            ))\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={2}\n                      name={this.state.trancheDetails.icon}\n                      color={this.state.trancheDetails.color.hex}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Covered by Junior tranches funds',\n        'Minimized risk exposure',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds\\' coverage given by Junior Tranches',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches funds',\n        'Higher risk exposure by protecting senior tranches',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n      descShort:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.',\n      descLong:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles. A Junior tranche receives a larger portion of the yield generated by the underlying pool, and therefore a Senior tranche has a lower yield. This is because the senior tranches have first lien on the underlying assets – they are in line to be repaid first, in case of default (hack, loss of funds). Junior tranches have a second lien or no lien at all. These products allow to tranche a spectrum of risks related to underlying assets and smart contract failures. In this way, risk-tolerant users can get higher returns for taking an higher risk, while risk-averse users will receive protection in exchange of a share of their profits with their risk-tolerant equivalents.',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n"],"sourceRoot":""}