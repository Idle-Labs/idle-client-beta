{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","utilities/components/GenericModal.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/components/BuyModal.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","FlexLoader/FlexLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js","IconBox/IconBox.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","children","CustomIndicatorSeparator","CustomMenu","mt","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","textAlign","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","GenericModal","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","dontShowAgain","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","stop","closeModal","_callee2","_context2","checkboxEnabled","toggleDontShowAgain","setLocalStorage","removeStoredItem","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","pt","title","iconHeight","Body","dangerouslySetInnerHTML","__html","required","checked","target","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonText","React","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_callee3","filteredTxs","amountLent","_context3","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","resolve","reject","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","initContract","abi","contractInfo","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args7","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","_ref4","protocol","protocolConfig","_ref5","protocolToken","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","cdo","CDO","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","tokensToMigrate","totalBalanceConverted","_ref15","_ref17$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_x9","_ref19","_ref20","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","_x10","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args11","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_callee13","_args13","_context13","idleTokensBalance","getFirstDepositTx","_callee14","deposits","_args14","_context14","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee15","firstDepositTxs","_args15","_context15","reduce","acc","getTrancheUserTransactionsEvents","_ref26","_callee16","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref27","_ref28","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","trancheToken_received","trancheToken_sent","_context16","getContractEvents","_x11","_x12","_x13","_ref29","_callee17","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args17","_context17","endpoints","makeEtherscanApiRequest","result","some","getTrancheGaugeConfig","trancheTokenAddresses","trancheType","cdoRewardsContractAddresses","addr","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","stakingContractAddresses","isTrancheReceived","isTrancheSent","returnValues","_x14","getEtherscanTokenTransfers","_ref30","_callee18","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args18","_context18","_x15","_x16","getTrancheStakingRewardsDistributions","_ref31","_callee20","stakingDistributions","_context20","_ref32","_callee19","transfers","_context19","_x19","_x17","_x18","getTrancheHarvests","_ref33","_callee22","_ref34","_ref35","autoFarming","harvestsList","strategyConfig","latestHarvestBlock","_args22","_context22","loadTrancheStrategyContract","Strategy","_ref36","_callee21","_context21","_x22","_x20","_x21","_ref37","_callee23","idleStrategyAddress","_context23","genericContractCallCachedTTL","_x23","getTrancheLastHarvest","_ref38","_callee24","harvestEnabled","startBlock","totalAmount","_context24","_x24","_x25","getGovTokenApr","_ref39","_callee25","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref40","_ref41","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context25","getTokenConfig","_address","apr2apy","apr","apy","_x26","_x27","_x28","_x29","getTrancheRewardTokensInfo","_ref42","_callee27","tokensDistribution","_context27","_ref43","_callee26","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref44","_ref45","prevHarvest","_latestHarvest","firstBlock","_ref46","_ref47","poolSize","elapsedBlocks","elapsedSeconds","_context26","rewardsRate","now","genericContractCallCached","getBlockInfo","_x32","_x30","_x31","getTrancheUnlentAmount","_ref48","_callee28","_context28","_x33","_ref49","_callee30","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args30","_context30","_ref50","_callee29","trancheTokenTransferEvent","_ref51","_ref52","blockInfo","tokenConversionRate","_context29","_x36","tokenTransferEvent","trancheTokenAmount","hashKey","trancheTokens","_x34","_x35","getTrancheUserTransactions","_ref53","_callee31","_context31","_x37","_x38","_x39","getTrancheFirstDepositTx","_ref54","_callee32","_context32","_x40","_x41","_x42","getAmountDepositedTranche","_ref55","_callee33","_context33","_x43","_x44","_x45","_ref56","_callee34","_ref57","_ref58","userAvgPrice","_context34","_x46","_x47","getAmountLent","_callee35","amountLents","_args35","_context35","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee41","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref61","_ref62","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args41","_context41","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref63","_callee36","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context36","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x48","_ref64","_callee37","_context37","_x49","match","_ref65","_callee38","_context38","_x50","_ref66","_callee39","_context39","_x51","items","to_address","_ref67","_callee40","polygonTx","erc20RootToken","_context40","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x52","getPolygonBaseTxs","_callee42","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args42","_context42","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee43","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args43","_context43","filterEthereumTxs","_callee44","_args44","_context44","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee45","resultData","allAvailableTokens","_args45","_context45","processStoredTxs","_callee46","contractInstance","_context46","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","t1","checkPolygonTransactionIncluded","_ref73","_callee47","_ref74","_ref75","_context47","getTransactionReceipt","_x53","_ref76","_callee48","_args48","_context48","_x54","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref77","_callee49","processTransactions","idleTokensAddresses","_args49","_context49","mappedTx","_x55","_x56","filterEtherscanTxs","_ref78","_callee50","processTxs","_args50","_context50","_x57","_ref79","_callee51","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args51","_context51","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x58","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref80","_callee56","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args56","_context56","baseTokenConfig","baseTokenAddress","_ref81","_callee55","minedTxs","_context55","_ref82","_callee54","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context54","getCurveTokenPrice","_ref83","_callee52","_context52","_x63","_x64","baseTokensConfig","t2","_ref84","_callee53","_context53","_x65","_x66","_x61","_x62","_x60","_x59","_ref85","_callee62","txsToProcess","_args62","_context62","_ref86","_callee61","_context61","_ref87","_callee60","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context60","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref88","_callee57","_context57","_x71","_x72","_ref89","_callee58","_context58","_x73","_x74","oldContract","events","raw","_ref90","_callee59","_context59","_x75","_x76","decodeLog","_token","_x69","_x70","_x68","_x67","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref91","_callee63","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args63","_context63","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x77","getBestTranche","_callee64","maxApy","trancheStrategyConfig","_args64","_context64","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref93","_callee65","error_callback","config","_args65","_context65","post","catch","_x78","_ref94","_callee66","_args66","_context66","_x79","_ref95","_callee67","apiKeyIndex","apiKey","_args67","_context67","_x80","_ref96","_callee68","return_data","_args68","_context68","_x81","makeCachedPostRequest","_ref97","_callee69","_args69","_context69","_x82","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee70","page","googlePageviewInfo","isOrigin","_args70","_context70","ga","_ref99","_callee72","googleEventsInfo","debugEnabled","originOk","_args72","_context72","analytics","google","addPostfixForTestnet","_ref100","_callee71","_context71","hitCallback","hitCallbackFail","_x84","_x85","_x83","createContract","_ref101","_callee73","_context73","_x86","_x87","_x88","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee76","activeOnly","whitelist","proposals","validProposals","_args76","_context76","_ref103","_callee75","checkedStrategies","_context75","end","author","snapshot","strategies","_ref104","_callee74","tokenContract","_context74","_x90","_x89","getAprsFromApi","_callee77","endpointInfo","aprs","_args77","_context77","_ref106","_callee78","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args78","_context78","_x91","getTokenExchangeRate","_ref107","_callee79","exchangeRateParams","exchangeRate","_context79","_x92","_x93","getTokenDecimals","_ref108","_callee80","_context80","_x94","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee81","idleTokenConfig","feeDistributorConfig","_context81","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee82","contractPaused","_args82","_context82","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref111","_callee84","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context84","lastAllocationsPromise","_ref112","_callee83","lastAllocations","_context83","_x96","_x97","alloc","_x95","_ref113","_callee85","oldContractBalance","oldContractTokenDecimals","oldContractName","_context85","_x98","_x99","_ref114","_callee86","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args86","_context86","getBlockNumber","getContractPastEvents","callEvents","_x100","_x101","_ref115","_callee87","_args87","_context87","getPastEvents","_x102","_x103","estimateMethodGasUsage","_ref116","_callee88","methodParams","_contract$methods","functionCall","gasLimit","_ref117","_ref118","_args88","_context88","getGasPrice","estimateGas","_x104","_x105","_ref119","_callee89","userAddress","signedParameters","callback_receipt","_contract$methods2","_context89","on","once","confirmationNumber","receipt","_x106","_x107","_x108","_x109","_x110","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref120","_callee90","biconomyInfo","res","_context90","limits","apiId","headers","x-api-key","_x111","sendTxWithPermit","_ref121","_callee91","_contract$methods3","messageToSign","_this$getSignaturePar","_context91","encodeABI","personal","sign","_x112","_x113","_x114","_x115","_x116","_x117","buildBiconomyErc20ForwarderTx","_ref122","_callee92","permitType","callData","buildParams","_context92","txGas","erc20ForwarderClient","buildTx","_x118","_x119","_x120","_x121","_x122","_ref123","_callee94","_context94","_ref124","_callee93","_context93","_x124","_x125","_x123","sendBiconomyTxWithErc20Forwarder","_ref125","_callee95","req","metaInfo","txResponse","fetchReceiptIntervalId","_context95","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x126","_x127","_x128","_x129","sendBiconomyTxWithPersonalSign","_ref126","_callee96","_this$getSignaturePar2","_context96","getNonce","_x130","_x131","_x132","_x133","signPermitEIP2612","_ref127","_callee97","erc20Name","owner","spender","deadline","domain","permit","domainData","_context97","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x134","_x135","_x136","_x137","_x138","_x139","_x140","_x141","signPermit","_ref128","_callee98","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args98","_context98","net","getId","nonceMethod","round","pow","allowed","response","_x142","_x143","_x144","_ref129","_callee99","permitParams","methodAbi","useNonce","_args99","_context99","_jsonInterface","f","unshift","_x145","_x146","_x147","_x148","_x149","_x150","_x151","sendSignedTx","_ref130","_callee100","MetaTransaction","dataToSign","_context100","_x152","_x153","_x154","_x155","_x156","checkTokenApproved","_ref131","_callee101","contractAddr","_ref132","_ref133","allowance","_context101","getAllowance","gte","_x157","_x158","_x159","_ref134","_callee102","_context102","_x160","_x161","_x162","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee104","highestValue","_args104","_context104","lendRates","aprInfo","tokenAPR","_ref136","_callee103","_context103","_x163","_ref137","_callee105","_args105","_context105","_x164","_x165","calculateGaugeBoost","_ref138","_callee106","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args106","_context106","workingBalance","getTokenTotalSupply","workingSupply","_x166","_x167","availableGauges","getGaugeWeight","_ref139","_callee107","lastGaugeTimestamp","gaugeWeight","_context107","_x168","getGaugeAbsoluteWeight","_ref140","_callee108","_ref141","_ref142","totalWeight","_context108","_x169","getGaugeNextWeight","_ref143","_callee109","nextGaugeTimestamp","_context109","_x170","getGaugeRewardsTokens","_ref144","_callee110","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndex","rewardTokenAddress","_ref145","_ref146","rewardData","rewardTokenBalance","cdoConfig","_ref147","_ref148","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_args110","_context110","rate","maxRewards","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x171","_ref149","_callee112","_args112","_context112","_ref150","_callee111","tokenGlobalConfig","stakingRewardsContract","_context111","_x174","_x172","_x173","_ref151","_callee113","field","addGovTokens","_args113","_context113","loadTrancheField","_x175","_x176","_x177","_x178","_x179","_x180","_x181","_x182","_ref152","_callee114","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","customAprFunction","additionalAprFunction","idleGovTokenConfig","_ref153","_ref154","totalSupply","virtualPrice","_ref155","_ref156","gaugeBalance","lastPrice1","staked1","totalStaked","_ref157","_ref158","deposited1","lastPrice","_ref159","_ref160","redeemable1","staked2","_ref161","_ref162","earningsStart","trancheApy2","deposited3","earningsEnd","_ref163","_ref164","trancheFee","earningsCounter","feesEnd","feesStart","_ref165","_ref166","deposited4","redeemable3","_ref167","_ref168","deposited2","redeemable2","tokensApy","trancheApr","trancheApyDecimals","baseApy","gaugeRewardsTokens","protocolBaseApy","_ref169","_ref170","_ref171","_ref172","earningsPerc","secondsFromFirstTx","_ref173","_ref174","seniorPool","juniorPool","coverage","strategyCustomAprFunction","strategyApr","_ref175","_ref176","_ref177","_ref178","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args114","_context114","BB","getApyFromApi","getPlatformRates","apyLabel","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x183","_x184","_x185","_x186","_x187","_x188","_x189","loadAssetField","_ref179","_callee115","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref180","_ref181","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref182","_ref183","amountLentCurve1","redeemableBalanceCurve","_ref184","_ref185","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref186","_ref187","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref188","_ref189","tokenPriceFirstDeposit","_ref190","_ref191","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref192","_ref193","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref194","_ref195","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref196","_ref197","amountLentCurve2","redeemableBalanceCurve1","_ref198","_ref199","redeemableBalance2","_args115","_context115","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x190","_x191","_x192","_x193","getIdleTokenSupply","_ref200","_callee116","idleTokenSupply","_args116","_context116","_x194","getIdleTokenPriceWithFee","_ref201","_callee117","_ref202","_ref203","fee","priceWFee","_args117","_context117","eq","_x195","_x196","_ref204","_callee118","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args118","_context118","_x197","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref205","_callee119","_ref206","_ref207","idleTokensTotalSupply","userShare","_context119","_x198","_x199","openWindow","open","getActiveCoverages","_callee121","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args121","_context121","coverages","_ref209","_callee120","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context120","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x200","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref210","_callee123","incidentsInfo","_ref211","_ref212","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context123","directProps","buyer","_ref213","_callee122","cover","coverId","claimSubmittedEvent","_ref214","_ref215","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref216","_ref217","_context122","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x202","_x201","getBatchedDepositExecutions","_ref218","_callee124","_context124","_x203","getBatchedDeposits","_callee126","filter_by_status","batchDepositConfig","batchedDeposits","_args126","_context126","_ref220","_callee125","currBatchIndex","batchIndex","_ref221","_ref222","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context125","_x204","getETHBalance","_ref223","_callee127","fixDecimals","_args127","_context127","_x205","_ref224","_callee128","_ref225","_ref226","_args128","_context128","ERC20","_x206","_x207","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref227","_callee129","_args129","_context129","_x208","_ref228","_callee130","_args130","_context130","_x209","_ref229","_callee131","_args131","_context131","_x210","_x211","getProtocolBalance","_ref230","_callee132","_context132","_x212","_x213","getAprs","_ref231","_callee133","_context133","addresses","_x214","genericIdleCall","_ref232","_callee134","callParams","_args134","_context134","_x215","_ref233","_callee135","_contract$methods4","_args135","_context135","_x216","_x217","_ref234","_callee137","_args137","_context137","_ref235","_callee136","_context136","_x219","_x220","_x218","getTxDecodedLogs","_ref236","_callee139","logAddr","decodeLogs","internalTransfers","_context139","_ref237","_callee138","_context138","_x225","_x226","_x221","_x222","_x223","_x224","blocksToSeconds","blocks","blocksPerSeconds","_callee140","_context140","_callee141","blockInfoToSave","_args141","_context141","getBlock","genericContractCallCachedTTLNoMulticall","_ref240","_callee142","_args142","_context142","_x227","_x228","_ref241","_callee143","useMultiCall","_args143","_context143","_x229","_x230","_ref242","_callee144","_args144","_context144","_x231","_x232","_ref243","_callee145","_args145","_context145","_x233","_x234","cachedContractCall","_ref244","_callee146","_args146","_context146","_x235","_x236","prepareMulticallData","strip0x","_ref245","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref246","_callee147","decodedParams","_args147","_context147","decodeParameters","returnFields","_x237","_ref247","_callee148","inputTypes","callHash","_args148","_context148","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x238","_x239","_ref248","_callee149","_contract$methods5","_args149","_context149","_x240","_x241","_ref249","_callee150","async","_args150","_context150","_x242","_x243","getUnlentBalance","_ref250","_callee151","unlentBalance","_context151","_x244","_ref251","_callee152","_args152","_context152","_x245","getLastAllocations","_ref252","_callee154","tokenAllocations","_context154","_ref253","_callee153","_context153","_x247","_x248","_x246","_ref254","_callee155","protocolsAprs","_ref255","_ref256","govTokensBalances","_args155","_context155","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x249","getPoolTokenPrice","_ref257","_callee156","protocolContract","_ref258","_ref259","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref260","_ref261","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args156","_context156","_x250","getSushiswapPoolTokenPrice","_ref262","_callee157","_ref263","_ref264","_ref265","_ref266","_context157","getSushiswapConversionRate","_x251","getSushiswapConversionRate_old","_ref267","_callee158","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context158","_x252","_x253","getCustomProtocolConversionRate","_ref268","_callee159","useWETH","forceTokenConfig","invertTokens","routerMethod","underlyingTokenConfig","unires","_args159","_context159","addressForPrice","conversionRateForceToken","conversionRateDirectConversion","conversionRateInvertTokens","conversionRouterMethod","_x254","_x255","getQuickswapConversionRate","_ref269","_callee160","_args160","_context160","_x256","_x257","_ref270","_callee161","_args161","_context161","_x258","_x259","_ref271","_callee162","_args162","_context162","_x260","_x261","getCurveDepositedTokens","_ref272","_callee163","idleTokensBalances","remainingCurveTokens","_args163","_context163","_x262","getCurveUnevenTokenAmounts","_ref273","_callee164","amounts","max_burn_amount","unevenAmounts","_context164","getCurveDepositContract","_x263","_x264","getMaticTrancheNFTs","_ref274","_callee166","_ref275","_ref276","poLidoNFT_address","stakeManager_address","maticTokenConfig","_ref277","_ref278","currentPolygonHeight","tokenIds","epochIntervalInSeconds","currentEpochTimestamp","currentPolygonEpoch","_ref279","_ref280","lastEpochInfo","currentEpochInfo","tokensAmounts","_context166","PoLidoNFT","PoLidoStakeManager","_ref281","_callee165","tokenId","_ref282","_ref283","usersRequest","remainingEpochs","unlockDate","_context165","requestEpoch","currentEpoch","_x266","_x265","getMaticTrancheAdditionalApy","_ref284","_callee167","_ref285","_ref286","trancheHarvests","trancheAPRSplitRatio","trancheAprRatio","additionalApys","_context167","apys","lastHarvest","harvestTokenConfig","_x267","_x268","getMaticTrancheStrategyApr","_ref287","_callee168","_context168","_x269","getMaticTrancheApy","_ref288","_callee169","_ref289","_ref290","stratApr","FULL_ALLOC","currentAARatio","isAATranche","_context169","_x270","_x271","_ref291","_callee170","platform","ratesInfo","_args170","_context170","_x272","_callee171","curveRatesInfo","_context171","strategyTokens","getCurveAPYContract","_callee172","blocksForPrevTokenPrice","_ref294","_ref295","prevTokenPrice","blocksMultiplier","curveAPR","_context172","getCurveTokenSupply","_callee173","_context173","getCurvePoolContract","_callee174","_args174","_context174","_callee175","_args175","_context175","_ref299","_callee176","_ref300","_ref301","_context176","_x273","_callee177","depositContractInfo","_context177","getCurveZapContract","_callee178","zapContractInfo","_context178","_callee179","poolContractInfo","_context179","getCurveSwapContract","_callee180","migrationContractInfo","_context180","getCurveIdleTokensAmounts","_callee182","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args182","_context182","_ref307","_callee181","coinIndex","curveIdleTokens","_context181","migrationParams","_x274","getCurveTokensAmounts","_callee184","useCoinIndex","_args184","_context184","_ref309","_callee183","_ref310","_ref311","idleTokenPrice","totalTokenSupply","_context183","_x275","getCurveAmounts","_ref312","_callee186","_args186","_context186","_ref313","_callee185","_context185","_x278","_x276","_x277","getCurveTokenAmount","_ref314","_callee187","_args187","_context187","_x279","getCurveSlippage","_ref315","_callee188","uneven_amounts","depositContract","_ref316","_ref317","Sv","_args188","_context188","_x280","_x281","_ref318","_callee189","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref319","_ref320","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args189","_context189","IAaveIncentivesController","emissionPerSecond","_x282","_callee191","_args191","_context191","_ref322","_callee190","_ref323","_ref324","_context190","_x283","getWMaticApr","_ref325","_callee192","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args192","_context192","_x284","_x285","getStkAaveApr","_ref326","_callee193","aaveConversionRate","stkAaveAPR","stkAaveValue","_args193","_context193","_x286","_x287","getCompAPR","_ref327","_callee194","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args194","_context194","_x288","_x289","getCompSpeed","_ref328","_callee195","cTokenAddress","compSpeed","_context195","_x290","_ref329","_callee196","cTokenInfo","compoundAllocationPerc","_ref330","_ref331","cTokenTotalSupply","compoundPoolShare","_args196","_context196","_x291","_callee198","_args198","_context198","_ref333","_callee197","_ref334","_ref335","_context197","_x292","_callee200","_args200","_context200","_ref337","_callee199","_ref338","_ref339","compApr","_context199","_x293","getTokensCsv","_callee203","csv","_context203","prototype","sum","pv","cv","avg","_ref341","_callee202","_context202","_ref342","_callee201","rates","header","rows","aprAvg","scoreAvg","lastRow","_context201","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x295","_x294","_callee205","convertToken","_args205","_context205","_ref344","_callee204","compTokenBalance","_context204","_x296","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref345","_callee207","govTokensUserDistribution","_args207","_context207","_ref346","_callee206","_context206","_x298","_x297","getGovTokensDistributionSpeed","_ref347","_callee209","govTokensDistribution","_args209","_context209","_ref348","_callee208","govSpeed","_context208","_x300","_x299","getGovTokensAprs","_ref349","_callee211","govTokensAprs","_args211","_context211","_ref350","_callee210","_ref351","_ref352","_ref353","_ref354","cTokenConfig","_context210","aprTooltipMode","_x303","_x301","_x302","_callee213","_args213","_context213","_ref356","_callee212","govTokenBalance","fromTokenConfig","_context212","_x304","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee214","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args214","_context214","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref358","_callee216","govTokensAmounts","_context216","getGovTokensUserAmounts","_ref359","_callee215","govTokenIndex","govTokenAddress","_context215","getGovTokenAddessByIndex","_x307","_x308","_x305","_x306","_ref360","_callee217","_context217","_x309","_x310","_ref361","_callee218","_context218","_x311","_x312","_callee221","govTokenConfigForced","_args221","_context221","_ref363","_callee220","_context220","_ref364","_callee219","_context219","_x314","_x315","_x313","getTokenFees","_callee222","_args222","_context222","_callee223","_ref367","_ref368","feePercentage","gain","fees","_args223","_context223","_ref369","_callee224","_args224","_context224","_x316","getTotalTVL","_callee225","tokensTVL","_context225","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee229","_context229","_ref372","_callee228","_context228","_ref373","_callee227","oldTokenTVL","idleTokenName","_ref374","_ref375","oldTokenConfig","_ref379","_ref380","oldTokenPrice","oldTotalSupply","_context227","showAUM","_ref376","_callee226","_ref377","_ref378","govTokenConversionRate","govTokenBalanceConverted","_context226","_x319","oldProtocols","oldProtocol","protocolPos","_x318","_x317","getSubstackLatestFeed","_callee230","idleSubstackFeed","latestFeed","_context230","getTrancheAggregatedStats","_callee234","totalAUM","_args234","_context234","_ref383","_callee233","_context233","_ref384","_callee232","_context232","_ref385","_callee231","_ref386","_ref387","_context231","_x322","_x321","_x320","getAggregatedStats","_callee236","allNetworks","networkIds","callsFailed","tvls","_args236","_context236","_ref389","_callee235","_context235","_x323","getAggregatedStats_chain","_callee241","avgAPR","_args241","_context241","availableStrategiesNetworks","_ref391","_callee240","_context240","_ref392","_callee239","_context239","_ref393","_callee238","tokenAUM","_context238","_ref394","_callee237","_ref395","_ref396","_context237","_x327","_x326","_x325","_x324","getTokenApy","_ref397","_callee242","_context242","_x328","getTokensToMigrate","_callee245","_args245","_context245","_ref399","_callee244","_context244","_ref400","_callee243","_ref401","_context243","_x330","_x329","getProtocolsTokensBalances","_callee247","tokenBalances","minTokenBalance","protocolsTokens","_args247","_context247","_ref403","_callee246","_context246","_x331","getTokenConversionRateField","getTrancheTokenConversionRate","_ref404","_callee248","trancheTokenConfig","trancheTokenConversionRate","_args248","_context248","isPoolToken","conversionRateProtocolContract","_x332","_ref405","_callee249","_args249","_context249","_x333","_x334","_ref406","_callee250","_args250","_context250","_x335","_x336","_x337","getAvgAPYStats","_ref407","_callee251","apiResults","_args251","_context251","_x338","_x339","_ref408","_callee252","statsTokenConfig","ToTokenConfig","_args252","_context252","addressForPriceFrom","conversionRateUseWETH","_x340","_ref409","_callee253","count","_conversionRate","_args253","_context253","_x341","_x342","getTokenScore","_ref410","_callee254","_ref411","_ref412","tokenScore","_context254","protocolScore","getTokenScoreApi","_x343","_x344","_ref413","_callee255","scores","_context255","_x345","_x346","_ref414","_callee256","idleGovTokenShowAPR","idleAPR","_args256","_context256","_x347","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","createContext","DashboardCard","isClickable","isVisible","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","getPermitTransactionParams","getTransactionParams_async","eventValue","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","checkPermit","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","ExtLink","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","placeholder","textTransform","Gauges","canVote","claimText","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","_this4","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","_this8","votingWeight","depositedAmount","withdrawnAmount","_this9","votingPowerPercentage","gaugeAddress","_this10","selectToken","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","preventDefault","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","ModalCard","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","flexWrap","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","unlentAmount","stakeEnabled","unstakeEnabled","trancheBaseApy","allowAAWithdraw","allowBBWithdraw","pendingNFTAmounts","modalAction","poolUtilizationRate","selectedTrancheOption","selectedStakeAction","maxPoolUtilizationRateReached","penaltyFee","Pool","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","checkModal","selectedActionChanged","selectedStakeActionChanged","modal","utilizationRate","pendingNFTAmount","pendingNFTs","nfts","pendingNFT","maxUnlockDate","isAfter","maxUtilizationRate","isStake","isDeposit","isWithdraw","maxPoolUtilizationRateReachedText","withdrawEnabled","showReferral","modalEnabled","option","selectTranche","borderTop","ImageButton","caption","imageSrc","messages","unstakeWithBalance","unstake","contractApprovedCallback","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","bg","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","param3","tranchesTvls","tvl","tranchesOrdering","loadQueryParams","then","defineProperty","depositedCdos","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","goBack","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","BuyModal","showInline","availableMethods","buyToken","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","bestYieldDisabledMessage","aysShort","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","lido","REACT_APP_IDLE_KEY","Authorization","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","stMATIC","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","CPOOL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","TRU","AGEUR","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","quickswap","convex","mstable","euler","wintermute","clearpool","truefi","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","weeksPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","checkpoint","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","orderedTranches","protocolTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageDepositKey","disabledMessageRedeemKey","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyEnabled","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args9","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","buyInstructions","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","adaptiveYieldSplitEnabled","levUSDC","Clearpool","TruefiPool","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","paused","disabledBg","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","lineWidth","react__WEBPACK_IMPORTED_MODULE_13___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_20__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","trancheChanged","protocolChanged","fieldChanged","formattedValue","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_17__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_15__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_12___default","_isBigNumber","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_16__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_19__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_14__","ColTitle","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.e7f3f491.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    // console.log(this.props.eventData,{\n    //   eventCategory: 'Transaction',\n    //   eventLabel: this.props.methodName,\n    //   eventAction: this.props.contractName,\n    //   ...this.props.eventData\n    // });\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName,\n        ...this.props.eventData\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass GenericModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    if (!this.props.checkboxEnabled){\n      this.toggleDontShowAgain(true)\n    }\n    this.props.closeModal();\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage(this.props.id,'true');\n    } else {\n      this.functionsUtil.removeStoredItem(this.props.id);\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            icon={this.props.icon}\n            title={this.props.title}\n            iconHeight={this.props.iconHeight || '40px'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{\n                  __html: this.props.text\n                }}\n              />\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.props.checkboxEnabled && (\n                  <Checkbox\n                    mb={3}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                )\n              }\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                {this.props.buttonText}\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GenericModal;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport PoLidoNFT from '../abis/lido/PoLidoNFT.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport PoLidoStakeManager from '../abis/lido/PoLidoStakeManager.json';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    // console.log('setProps',props.contracts);\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  initContract = async (contractName,address,abi) => {\n    const contractInfo = await this.props.initContract(contractName, address, abi);\n    const contractFound = this.getContractByName(contractName);\n    if (!contractFound && contractInfo){\n      this.props.contracts.push(contractInfo);\n    }\n    return contractInfo;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (protocolToken) => {\n        const tokenConfig = protocolConfig[protocolToken];\n        const token = tokenConfig.token;\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  cdo:tokenConfig.CDO.name,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,'trancheStakedBalance',trancheStakedBalance.toFixed(),'amountDeposited',amountDeposited.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheEarnings',trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits,\n      trancheToken_received,\n      trancheToken_sent\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserTransactionsEvents',account,tokenConfig.token,trancheToken_transfers_in,trancheToken_transfers_out);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    if (trancheToken_received){\n      trancheToken_received.forEach( tx => {\n        tx.type = 'trancheReceived';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_received = [];\n    }\n\n    if (trancheToken_sent){\n      trancheToken_sent.forEach( tx => {\n        tx.type = 'trancheSent';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_sent = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n\n          const gaugeConfig = this.getTrancheGaugeConfig(tokenConfig.protocol,tokenConfig.token);\n\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n          const cdoRewardsContractAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].CDORewards.address.toLowerCase()) ).filter( addr => addr !== '0x0000000000000000000000000000000000000000' );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          const stakingContractAddresses = cdoRewardsContractAddresses;\n          if (gaugeConfig){\n            stakingContractAddresses.push(gaugeConfig.address.toLowerCase());\n          }\n\n          const isTrancheReceived = tx.from.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.from.toLowerCase()) && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheSent = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.to.toLowerCase());\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          } else if (isTrancheReceived){\n            type = 'trancheReceived';\n          } else if (isTrancheSent){\n            type = 'trancheSent';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          // if (type){\n          //   console.log('tx',tokenConfig.token,tx.hash,tx.from,tx.to,stakingContractAddresses,type);\n          // }\n\n          return type;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    // if (limit && parseInt(limit)>0){\n    //   endpoint = endpoint+`&limit=${limit}`;\n    // }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return limit && parseInt(limit)>0 ? transferEvents.slice(0, limit) : transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n\n  getTrancheHarvests = async (tokenConfig, trancheConfig, limit=null) => {\n    const [\n      // stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      // this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = {}; //stakingRewardsDistributions || {};\n\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const strategyConfig = tokenConfig.Strategy;\n    let latestHarvestBlock = await this.genericContractCall(strategyConfig.name, 'latestHarvestBlock');\n\n    if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n      latestHarvestBlock =  'latest';\n    }\n    \n    await this.asyncForEach(Object.keys(autoFarming), async (token) => {\n      const transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, strategyConfig.address, null, tokenConfig.address, strategyConfig.address, tokenConfig.blockNumber, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  loadTrancheStrategyContract = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = strategyConfig.address || await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress){\n      await this.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      return idleStrategyAddress;\n    }\n    return false;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.loadTrancheStrategyContract(tokenConfig);\n\n    if (idleStrategyAddress) {\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name, 'latestHarvestBlock');\n\n      if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n        return null;\n      }\n\n      startBlock = latestHarvestBlock;\n      latestHarvestBlock++;\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUnlentAmount = async (tokenConfig) => {\n    return await this.getTokenBalance(tokenConfig.token, tokenConfig.CDO.address);\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem','trancheReceived','trancheSent'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      // const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n      const [\n        blockInfo,\n        tokenConversionRate,\n        tranchePrice\n      ] = await Promise.all([\n        this.getBlockInfo(trancheTokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,trancheTokenTransferEvent.blockNumber),\n        this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address], {}, trancheTokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[trancheTokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tranchePrice,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n\n      const tranchePrice = this.fixTokenDecimals(blocksInfo[trancheTokenTransferEvent.blockNumber].tranchePrice, tokenConfig.decimals);\n\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n      const tokenAmount = tokenTransferEvent ? this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals) : trancheTokenAmount.times(tranchePrice);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      // const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[trancheTokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${trancheTokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        cdo: tokenConfig.CDO.name,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: trancheTokenTransferEvent.transactionHash,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n        blockNumber: trancheTokenTransferEvent.blockNumber,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[trancheTokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      // if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      if (['trancheDeposit','trancheReceived'].includes(trancheTokenTransferEvent.type)) {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      // } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      } else if (['trancheRedeem','trancheSent'].includes(trancheTokenTransferEvent.type)) {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        \n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = totalAmountDeposited.gt(0) ? avgBuyPrice.div(totalAmountDeposited) : this.BNify(0);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = null, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = null, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n\n    if (data) {\n      return data;\n    }\n\n    return null;\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    if (!data || !data.data){\n      return null;\n    }\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    if (!permitConfig.nonceMethod || !baseContract.methods[permitConfig.nonceMethod]){\n      return false;\n    }\n\n    // console.log('signPermit',baseContractName,baseContract,baseContract.methods,permitConfig.nonceMethod);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = await baseContract.methods[permitConfig.nonceMethod](holder).call();\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    // console.log('checkTokenApproved', contractName, contractAddr, walletAddr, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim,\n      workingSupply:working_supply\n    };\n  }\n  getTrancheGaugeConfig = (protocol, token) => {\n    const availableGauges = this.getGlobalConfig(['tools','gauges','props','availableGauges'])\n    const gaugeToken = Object.keys(availableGauges).find( gaugeToken => availableGauges[gaugeToken].protocol.toLowerCase() === protocol.toLowerCase() && gaugeToken.toLowerCase() === token.toLowerCase() );\n    if (gaugeToken){\n      return availableGauges[gaugeToken];\n    }\n    return null;\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    const currTimestamp = parseInt(Date.now()/1000);\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = currTimestamp;\n    }\n\n    const params = [gaugeConfig.address];\n\n    if (lastGaugeTimestamp<currTimestamp){\n      params.push(lastGaugeTimestamp);\n    }\n\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',params);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      for (let tokenIndex=0; tokenIndex<multiRewardsConfig.maxRewards; tokenIndex++){\n      // await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      };\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let paused = false;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getTokenConfig(tokenConfig.token).label || this.capitalize(tokenConfig.token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n\n    const customAprFunction = tokenConfig.customAprFunction ? this[tokenConfig.customAprFunction] : null;\n    const additionalAprFunction = tokenConfig.additionalAprFunction ? this[tokenConfig.additionalAprFunction] : null;\n    \n    // Create Tranche Strategy contract\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = '$ '+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n\n      case 'seniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.fixTokenDecimals(output, 5);\n        }\n\n        if (this.BNify(output).isNaN()) {\n          output = this.BNify(0);\n        }\n\n        if (formatValue){\n          output = output.times(100)+'%';\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApr = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let protocolBaseApy = this.BNify(0);\n\n        if (additionalAprFunction){\n          tokensApy = await additionalAprFunction(tokenConfig, trancheConfig);\n        }\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          protocolBaseApy,\n          trancheApr\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.getApyFromApi ? this.getPlatformRates(tokenConfig.getApyFromApi.protocol, tokenConfig.getApyFromApi.path) : null,\n          customAprFunction ? customAprFunction(tokenConfig, trancheConfig) : (multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]))\n        ]);\n\n        if (trancheApr){\n          let apr = this.fixTokenDecimals(trancheApr, tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(protocolBaseApy).isNaN()){\n            apy = apy.plus(protocolBaseApy);\n            tokensApy[`${tokenConfig.getApyFromApi.apyLabel}`] = protocolBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                \n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add additional aprs to total apy\n          Object.values(tokensApy).forEach( tokenApy => {\n            apy = apy.plus(tokenApy);\n          })\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'seniorCoverage':\n        const [\n          seniorPool,\n          juniorPool\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = '0%';\n        if (this.BNify(seniorPool).gt(0) && this.BNify(juniorPool).gt(0)){\n          // output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          // output = '$'+this.abbreviateNumber(juniorPool, decimals, maxPrecision, minPrecision)\n          let coverage = juniorPool.div(seniorPool);\n          \n          if (this.BNify(coverage).isNaN()){\n            coverage = this.BNify(0);\n          }\n\n          if (formatValue){\n            output = '$1 is covered by $'+this.abbreviateNumber(coverage, decimals, maxPrecision, minPrecision)\n          } else {\n            output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          }\n        }\n      break;\n      case 'strategyApr':\n        const strategyCustomAprFunction = tokenConfig.Strategy.customAprFunction ? this[tokenConfig.Strategy.customAprFunction] : null;\n        output = strategyCustomAprFunction ? await strategyCustomAprFunction(tokenConfig) : await this.genericContractCallCached(tokenConfig.Strategy.name, 'getApr');\n        if (!output){\n          output = 0;\n        }\n        output = strategyCustomAprFunction ? this.BNify(output) : this.fixTokenDecimals(output,18);\n        if (formatValue){\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'apyBoost':\n        let trancheApy = 0;\n        let strategyApr = 0;\n        [\n          trancheApy,\n          strategyApr\n        ] =  await Promise.all([\n          this.loadTrancheFieldRaw('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('strategyApr', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = this.BNify(strategyApr).gt(0) ? this.BNify(trancheApy).div(this.BNify(strategyApr)) : this.BNify(0);\n\n        // console.log('apyBoost', 'trancheApy' ,this.BNify(trancheApy).toString(), 'strategyApr', this.BNify(strategyApr).toString(), output.toString());\n\n        if (formatValue){\n          output = `${output.toFixed(1)}x`;// (${strategyApr.toFixed(2)}%)`;\n        }\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        if (formatValue) {\n          output = output/1000;\n          output = output.toFixed(0)+\"/\"+(100-output).toFixed(0);\n        }\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusIcon':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        }\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        } else {\n          output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'limit', 3600);\n          if (output){\n            output = this.fixTokenDecimals(output, tokenConfig.decimals);\n\n            if (field === 'trancheLimit'){\n              if (output.gt(0)){\n                if (formatValue) {\n                  output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n                }\n              } else {\n                output = this.BNify(0);\n                if (formatValue){\n                  output = 'None';\n                }\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getTokenConfig(govToken);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Force token from - in case DAI doesn't exist\n    if (tokenConfigDest.conversionRateForceToken){\n      const forceTokenConfig = this.getTokenConfig(tokenConfigDest.conversionRateForceToken);\n      if (forceTokenConfig){\n        tokenConfigFrom = forceTokenConfig;\n      }\n    }\n\n    // Check if has to convert without passing through WETH\n    if (typeof tokenConfigDest.conversionRateDirectConversion !== 'undefined'){\n      useWETH = useWETH && !tokenConfigDest.conversionRateDirectConversion;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n\n  getMaticTrancheNFTs = async (address) => {\n    const [\n      poLidoNFT_address,\n      stakeManager_address\n    ] = await Promise.all([\n      this.genericContractCallCached('stMATIC', 'poLidoNFT'),\n      this.genericContractCallCached('stMATIC', 'stakeManager'),\n    ])\n\n    await this.initContract('poLidoNFT', poLidoNFT_address, PoLidoNFT);\n    await this.initContract('poLidoStakeManager', stakeManager_address, PoLidoStakeManager);\n\n    const maticTokenConfig = this.getTokenConfig('MATIC');\n    const polygonEndpoint = this.getGlobalConfig(['network','providers','polygon','endpoints','checkpoint']);\n\n    const [\n      currentPolygonHeight,\n      tokenIds\n    ] = await Promise.all([\n      this.makeCachedRequest(polygonEndpoint+'count', 300, true),\n      this.genericContractCall('poLidoNFT', 'getOwnedTokens', [address])\n    ]);\n\n    // Decrease checkpoint\n    let epochIntervalInSeconds = 2700;\n    let currentEpochTimestamp = Date.now()/1000;\n    let currentPolygonEpoch = currentPolygonHeight && currentPolygonHeight.result ? currentPolygonHeight.result.result : await this.genericContractCall('poLidoStakeManager', 'epoch');\n\n    // Get checkpoints interval\n    if (currentPolygonEpoch){\n      // Safe margin for epoch fethed from polido stake manager\n      if (!currentPolygonHeight || !currentPolygonHeight.result){\n        currentPolygonEpoch-=2;\n      }\n      const [\n        lastEpochInfo,\n        currentEpochInfo\n      ] = await Promise.all([\n        this.makeCachedRequest(polygonEndpoint+(currentPolygonEpoch-1), 300, true),\n        this.makeCachedRequest(polygonEndpoint+currentPolygonEpoch, 300, true)\n      ])\n\n      if (currentEpochInfo && currentEpochInfo.result){\n        currentEpochTimestamp = parseInt(currentEpochInfo.result.timestamp);\n\n        if (lastEpochInfo && lastEpochInfo.result){\n          epochIntervalInSeconds = (currentEpochInfo.result.timestamp-lastEpochInfo.result.timestamp);\n        }\n      }\n      // console.log('epoch info', currentEpochInfo, lastEpochInfo, epochIntervalInSeconds);\n    } else {\n      currentPolygonEpoch = 0;\n    }\n\n    const tokensAmounts = await this.asyncForEach(tokenIds, async (tokenId) => {\n      const [\n        tokenAmount,\n        usersRequest\n      ] = await Promise.all([\n        this.genericContractCall('stMATIC', 'getMaticFromTokenId', [tokenId]),\n        this.genericContractCall('stMATIC', 'token2WithdrawRequest', [tokenId])\n      ]);\n\n      const status = parseInt(usersRequest.requestEpoch)>=parseInt(currentPolygonEpoch) ? 'pending' : 'available';\n\n      // console.log('usersRequest', tokenId, usersRequest, epochIntervalInSeconds);\n\n      const remainingEpochs = Math.max(0, parseInt(usersRequest.requestEpoch)-parseInt(currentPolygonEpoch));\n\n      // Calculate tokens unlock time\n      const remainingTime = parseInt(remainingEpochs)*epochIntervalInSeconds;\n      const unlockDate = moment((currentEpochTimestamp+remainingTime)*1000);\n\n      return {\n        status,\n        tokenId,\n        unlockDate,\n        remainingTime,\n        remainingEpochs,\n        currentEpoch: parseInt(currentPolygonEpoch),\n        requestEpoch: parseInt(usersRequest.requestEpoch),\n        amount: this.fixTokenDecimals(tokenAmount, maticTokenConfig.decimals),\n      }\n    });\n\n    return tokensAmounts;\n\n    // return tokensAmounts.reduce( (totalAmount, tokenAmount) => (totalAmount = totalAmount.plus(tokenAmount)), this.BNify(0) );\n  }\n\n  getMaticTrancheAdditionalApy = async (tokenConfig, trancheConfig) => {\n    const [\n      trancheHarvests,\n      trancheAPRSplitRatio,\n      tranchePool,\n    ] = await Promise.all([\n      this.getTrancheHarvests(tokenConfig, trancheConfig, 1),\n      this.genericContractCall(tokenConfig.CDO.name, 'trancheAPRSplitRatio'),\n      this.loadTrancheFieldRaw('tranchePool',{}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n    ]);\n\n    const trancheAprRatio = this.fixTokenDecimals(trancheAPRSplitRatio, 5);\n\n    const additionalApys = Object.keys(trancheHarvests).reduce( (apys, token) => {\n      const lastHarvest = trancheHarvests[token][0];\n      const harvestTokenConfig = this.getTokenConfig(token);\n      const harvestedValue = this.fixTokenDecimals(lastHarvest.returnValues.value, harvestTokenConfig.decimals).times(trancheAprRatio);\n      const tokenApr = harvestedValue.div(tranchePool).times(this.getGlobalConfig(['network', 'weeksPerYear']));\n      const tokenApy = this.apr2apy(tokenApr);\n      // console.log(token, harvestedValue.toString(), tranchePool.toString(), tokenApr.toString(), tokenApy.toString());\n      apys[token] = tokenApy;\n      return apys;\n    },{});\n\n    // console.log('getMaticTrancheAdditionalApy', trancheHarvests, trancheAPRSplitRatio, tranchePool.toString(), additionalApys);\n\n    return additionalApys;\n  }\n\n  getMaticTrancheStrategyApr = async (tokenConfig) => {\n    const apr = await this.getPlatformRates(tokenConfig.protocol, ['apr']);\n    if (!this.BNify(apr).isNaN()){\n      return this.BNify(apr).div(100);\n    }\n    return this.BNify(0);\n  }\n\n  getMaticTrancheApy = async (tokenConfig, trancheConfig) => {\n    const [\n      stratApr,\n      FULL_ALLOC,\n      currentAARatio,\n      trancheAPRSplitRatio,\n    ] = await Promise.all([\n      this.getMaticTrancheStrategyApr(tokenConfig),\n      this.genericContractCall(tokenConfig.CDO.name, 'FULL_ALLOC'),\n      this.genericContractCall(tokenConfig.CDO.name, 'getCurrentAARatio'),\n      this.genericContractCall(tokenConfig.CDO.name, 'trancheAPRSplitRatio')\n    ]);\n\n    const isAATranche = trancheConfig.tranche === 'AA';\n\n    if (this.BNify(currentAARatio).eq(0)){\n      return isAATranche ? this.BNify(0) : this.BNify(stratApr);\n    }\n\n    if (this.BNify(stratApr).isNaN()){\n      return this.BNify(0);\n    }\n\n    const apr = isAATranche ? this.BNify(stratApr).times(trancheAPRSplitRatio).div(currentAARatio) : this.BNify(stratApr).times(this.BNify(FULL_ALLOC).minus(trancheAPRSplitRatio)).div(this.BNify(FULL_ALLOC).minus(currentAARatio));\n\n    return this.BNify(this.normalizeTokenAmount(apr, tokenConfig.CDO.decimals));\n  }\n\n  getPlatformRates = async (platform, path=null) => {\n    // Check for cached data\n    const cachedDataKey = `getPlatformRates_${platform}_${path ? JSON.stringify(path) : ''}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const ratesInfo = this.getGlobalConfig([platform, 'rates']);\n    if (ratesInfo) {\n      const results = await this.makeRequest(ratesInfo.endpoint, false, ratesInfo.config);\n\n      if (results && results.data) {\n        if (path){\n          let apy = this.getArrayPath(path, results.data);\n          if (apy) {\n            apy = this.BNify(apy).times(100);\n            if (!this.BNify(apy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, apy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (/*tokenConfig.enabled && */tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getTokenConfig(convertToken);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n\n\n\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        handleClick={this.props.handleClick}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Approve',\n          eventLabel: tx ? tx.status : null,\n          eventAction: this.props.tokenConfig.token\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log(this.props.eventData,{\n      //   eventCategory: methodName,\n      //   eventValue: inputValue.toFixed(),\n      //   eventAction: this.props.tokenConfig.token,\n      //   ...this.props.eventData\n      // });\n\n      const callback = (tx,error) => {\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        // Send Google Analytics event\n        if (tx){\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: methodName,\n            eventValue: inputValue.toFixed(),\n            eventAction: this.props.tokenConfig.token,\n            ...this.props.eventData\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n        }\n\n        this.setState({\n          txSucceeded,\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n\n        if (txSucceeded){\n          // Reset input\n          this.changeInputValue({\n            target:{\n              value:0\n            }\n          },false);\n          this.setState({\n            showPermitBox:false\n          });\n          // Call upper component callback\n          if (typeof this.props.callback === 'function'){\n            this.props.callback(tx,_amount,params);\n          }\n        }\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    let contractApproved = false;\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      contractApproved = true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      contractApproved = true;\n    }\n      \n    if (!contractApproved){\n      contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    }\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              handleClick={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    eventData:{},\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n      // const protocolConfig = this.functionsUtil.getGlobalConfig(['stats','protocols',gaugeConfig.protocol]);\n\n      const tokenConfig = {};\n      tokenConfig.token = gaugeConfig.underlyingToken;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let eventData = {\n      eventAction:trancheTokenConfig.token\n    };\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Gauge_Vote';\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Deposit';\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Claim';\n\n            switch (this.state.claimToken){\n              case 'additional':\n                eventData.eventLabel = (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? Object.keys(this.state.claimableRewardsTokens).join('_') : 'multi_rewards';\n              break;\n              default:\n              case 'default':\n                eventData.eventLabel = this.props.toolProps.veToken.rewardToken;\n              break;\n            }\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Redeem';\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('eventData',eventData);\n\n    this.setState({\n      canVote,\n      eventData,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                eventData={this.state.eventData}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                eventData={this.state.eventData}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    minPrecision:2,\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'APY Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  },\n                  name:'trancheAPRRatio'\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                {\n                  this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                }\n              </Text>\n              <Flex\n                mt={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    props:{\n                      decimals:2,\n                      minPrecision:2,\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    },\n                    name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericModal from '../utilities/components/GenericModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    eventData:{},\n    infoText:null,\n    modalApy:null,\n    trancheFee:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    unlentAmount:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    contractPaused:false,\n    buttonDisabled:false,\n    selectedTranche:null,\n    allowAAWithdraw:false,\n    allowBBWithdraw:false,\n    availableTranches:null,\n    pendingNFTAmounts:null,\n    modalAction:'deposited',\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    poolUtilizationRate:null,\n    balanceSelectorInfo:null,\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false,\n    maxPoolUtilizationRateReached:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.checkModal();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  checkModal(){\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n    if (modalEnabled){\n      const modalAlreadyOpened = this.functionsUtil.getStoredItem(this.props.tokenConfig.modal.id);\n      if (!modalAlreadyOpened){\n        this.setState({\n          activeModal:this.props.tokenConfig.modal.id\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    // Init Pool contract\n    if (this.props.tokenConfig.Pool){\n      await this.functionsUtil.initContract(this.props.tokenConfig.Pool.name, this.props.tokenConfig.Pool.address, this.props.tokenConfig.Pool.abi);\n    }\n\n    const [\n      unlentAmount,\n      tokenBalance,\n      trancheBalance,\n      contractPaused,\n      lastHarvest,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      stakedBalance,\n      trancheFee,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy,\n      pendingNFTs,\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheUnlentAmount(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'paused'),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowAAWithdraw'),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowBBWithdraw'),\n      this.props.gaugeConfig ? this.functionsUtil.getTokenBalance(this.props.gaugeConfig.name, this.props.account) : null,\n      this.props.trancheConfig.functions.utilizationRate ? this.functionsUtil.genericContractCallCached(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.utilizationRate) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheField('trancheFee',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.props.trancheConfig.functions.pendingNFTAmount && this.functionsUtil[this.props.trancheConfig.functions.pendingNFTAmount] ? this.functionsUtil[this.props.trancheConfig.functions.pendingNFTAmount](this.props.account) : null\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest', lastHarvest);\n    // console.log('pendingNFTs', pendingNFTs);\n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n    // console.log('utilizationRate', this.props.trancheConfig.functions.utilizationRate, poolUtilizationRate);\n\n    const pendingNFTAmounts = pendingNFTs.reduce( (nfts, pendingNFT) => {\n      if (!nfts[pendingNFT.status]) {\n        nfts[pendingNFT.status] = {\n          tokenIds:[],\n          maxUnlockDate:null,\n          amount:this.functionsUtil.BNify(0),\n          currentEpoch:pendingNFT.currentEpoch\n        };\n      }\n      if (!nfts[pendingNFT.status].maxUnlockDate || pendingNFT.unlockDate.isAfter(nfts[pendingNFT.status].maxUnlockDate)){\n        nfts[pendingNFT.status].maxUnlockDate = pendingNFT.unlockDate;\n      }\n      nfts[pendingNFT.status].tokenIds.push(pendingNFT.tokenId);\n      nfts[pendingNFT.status].amount = nfts[pendingNFT.status].amount.plus(pendingNFT.amount);\n      return nfts;\n    }, {});\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value: trancheInfo.type,\n      icon: trancheInfo.image,\n      label: trancheInfo.name,\n      tranche: trancheInfo.type,\n      trancheConfig: this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    const maxPoolUtilizationRateReached = this.props.tokenConfig.maxUtilizationRate && !this.functionsUtil.BNify(poolUtilizationRate).isNaN() && this.functionsUtil.fixTokenDecimals(poolUtilizationRate, 18).gte(this.props.tokenConfig.maxUtilizationRate);\n\n    this.setState({\n      trancheAPY,\n      trancheFee,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      unlentAmount,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      contractPaused,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      pendingNFTAmounts,\n      availableTranches,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds,\n      maxPoolUtilizationRateReached\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData = async () => {\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n    let balanceSelectorInfo = null;\n    let eventData = {\n      eventAction:this.props.trancheConfig.token\n    };\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Deposit';\n\n        if (this.state.trancheFee){\n          balanceSelectorInfo = {\n            text:`Performance fee: ${this.state.trancheFee}`,\n            tooltip:this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])\n          }\n        }\n        \n        if (this.props.gaugeConfig && this.props.gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your tranche tokens (${this.props.gaugeConfig.trancheToken.token}) in the Liquidity Gauge and get additional rewards.`;\n        }\n\n        // Disabled info text for disabled tranche\n        if (!!this.props.tokenConfig.disabled){\n          infoText = null;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n\n        // Set data for ga custom event\n        eventData.eventCategory = this.functionsUtil.capitalize(this.state.selectedStakeAction);\n\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set or the tranche is disabled\n            if (this.props.gaugeConfig || !this.state.stakeEnabled || !this.props.tokenConfig.enabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Redeem';\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        } else {\n          // Overwrite default action message\n          if (this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0)){\n            infoText = `To withdraw your ${this.props.selectedToken} make sure to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    this.setState({\n      infoBox,\n      infoText,\n      eventData,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    })\n  }\n\n  changeInputCallback = async (inputValue) => {\n\n    if (this.state.selectedAction === 'withdraw'){\n      // Calculate exit fee for TrueFi - USDC\n      if (this.props.trancheConfig.functions.penaltyFee && this.props.tokenConfig.Pool && this.functionsUtil.BNify(inputValue).gt(0)){\n        const amount = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n        let penaltyFee = await this.functionsUtil.genericContractCall(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.penaltyFee, [amount])\n\n        if (penaltyFee){\n          penaltyFee = this.functionsUtil.BNify(10000).minus(penaltyFee).div(100)\n          const balanceSelectorInfo = {\n            text:`Penalty fee: <span style=\"color:${this.props.theme.colors.alert}\">${penaltyFee.toFixed(2)}%</span>`\n          }\n\n          this.setState({\n            balanceSelectorInfo\n          });\n        }\n      // Handle max unlent amount while max Utilization Rate reached\n      } else {\n        let buttonDisabled = false;\n        if (this.state.maxPoolUtilizationRateReached && this.state.unlentAmount.gt(0) && this.functionsUtil.BNify(inputValue).gt(this.state.unlentAmount)){\n          buttonDisabled = true;\n        }\n        this.setState({\n          buttonDisabled\n        });\n      }\n    }\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams = (amount,selectedPercentage) => {\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice, this.props.tokenConfig.decimals));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n    const isDisabled = !!this.props.tokenConfig.disabled;\n\n    const unlentAmount = this.state.unlentAmount || this.functionsUtil.BNify(0);\n\n    let maxPoolUtilizationRateReachedText = `This pool has reached the maximum utilization rate (${(this.props.tokenConfig.maxUtilizationRate*100).toFixed(0)}%), `;\n    if (unlentAmount.gt(0)){\n      maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`you can withdraw up to ${unlentAmount.toFixed(4)} ${this.props.tokenConfig.token}`);\n    } else {\n      maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`therefore ${this.state.selectedAction}s are temporarily unavailable.`);\n    }\n\n    const withdrawEnabled = ((this.props.trancheConfig.tranche === 'AA' && this.state.allowAAWithdraw) || (this.props.trancheConfig.tranche === 'BB' && this.state.allowBBWithdraw));\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = !this.state.contractPaused && this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              minPrecision:2,\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:'trancheAPRRatio'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        {\n                          this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                        }\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              decimals:2,\n                              minPrecision:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'primary'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                  dangerouslySetInnerHTML={{__html:this.props.tokenConfig.description}}\n                                >\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                /*\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) :*/\n                /*\n                !this.props.tokenConfig.adaptiveYieldSplitEnabled && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To improve the capital efficiency of tranches, the apy ratio will be updated to the new Adaptive Yield Split on Wed July 20th. No action required. Read more in the <a href=\"https://gov.idle.finance/t/adaptive-yield-split-implementation-for-existing-pyts/1019\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Forum Proposal</a>.`}\n                  />\n                )\n                */\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled && !this.props.gaugeConfig\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && !this.state.contractPaused && !this.state.maxPoolUtilizationRateReached && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                this.state.pendingNFTAmounts && this.state.pendingNFTAmounts['available'] && this.state.pendingNFTAmounts['available'].amount.gt(0) ? (\n                  <IconBox\n                    cardProps={{\n                      my:2,\n                      width:1\n                    }}\n                    icon={'DoneAll'}\n                    iconProps={{\n                      color:this.props.theme.colors.transactions.status.completed\n                    }}\n                    text={`Your redeem amount of ${this.state.pendingNFTAmounts['available'].amount.toFixed(4)} ${this.props.tokenConfig.token} is now claimable. ${this.props.tokenConfig.messages.pendingNFTAmount}`}\n                  />\n                ) : this.state.pendingNFTAmounts && this.state.pendingNFTAmounts['pending'] && this.state.pendingNFTAmounts['pending'].amount.gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      my:2,\n                      width:1\n                    }}\n                    icon={'AccessTime'}\n                    text={`You have a pending amount of ${this.state.pendingNFTAmounts['pending'].amount.toFixed(4)} ${this.props.tokenConfig.token} to withdraw. Please wait approximately until ${this.state.pendingNFTAmounts['pending'].maxUnlockDate.utc().format('DD MMM, YYYY @ HH:mm')} UTC to claim your funds.<br /><a href=\"https://docs.polygon.lido.fi/how-lido-on-polygon-works/#unstake-tokens\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Read more</a>`}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              {\n                this.state.maxPoolUtilizationRateReached && unlentAmount.gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      mt: 2\n                    }}\n                    icon={'Warning'}\n                    text={maxPoolUtilizationRateReachedText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  this.state.contractPaused && (this.state.selectedAction !== 'withdraw' || !withdrawEnabled) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits${!withdrawEnabled ? '/Withdraws' : '' } for this tranche are temporarily suspended due to Smart-Contract maintenance.${withdrawEnabled && ' Withdrawals remain enabled.'}`}\n                    />\n                  ) : this.state.maxPoolUtilizationRateReached && (this.state.selectedAction !== 'withdraw' || unlentAmount.lte(0)) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={maxPoolUtilizationRateReachedText}\n                    />\n                  ) : isDisabled && (isDeposit || (isStake && this.state.selectedStakeAction === 'stake')) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits have been disabled for this tranche, please redeem your funds.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={ e => this.setSelectedAction('withdraw') }\n                      >\n                        Redeem\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.props.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      {\n                        this.state.stakedBalance.gt(0) ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MonetizationOn'}\n                            />\n                            <Text\n                              mt={1}\n                              mb={3}\n                              fontSize={[2,3]}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                            </Text>\n                            <ExecuteTransaction\n                              params={[]}\n                              {...this.props}\n                              Component={RoundButton}\n                              parentProps={{\n                                width:1,\n                                alignItems:'center',\n                                justifyContent:'center'\n                              }}\n                              componentProps={{\n                                value:'Unstake',\n                                buttonProps:{\n                                  size:'medium',\n                                  width:[1,1/3],\n                                }\n                              }}\n                              action={'Unstake'}\n                              eventData={this.state.eventData}\n                              contractName={this.state.contractInfo.name}\n                              callback={this.transactionSucceeded.bind(this)}\n                              methodName={this.props.trancheConfig.functions.unstake}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MoneyOff'}\n                            />\n                            <Text\n                              mt={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any <strong>{this.state.tokenConfig.label}</strong> to unstake.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <IconBox\n                            cardProps={{\n                              my:2,\n                              width:1\n                            }}\n                            icon={'MoneyOff'}\n                            text={`You don't have any ${this.props.selectedToken} in your wallet.`}\n                          />\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`+(this.props.gaugeConfig ? `<br />Stake your tranche tokens in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a> to get additional rewards!` : ``)}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n              {\n                modalEnabled && (\n                  <GenericModal\n                    {...this.props.tokenConfig.modal}\n                    closeModal={this.resetModal}\n                    isOpen={this.state.activeModal === this.props.tokenConfig.modal.id}\n                  />\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n              // Reset amountLent if below zero\n              if (amountLent.lt(0)){\n                amountLent = this.functionsUtil.BNify(0);\n              }\n            break;\n            default:\n            break;\n          }\n\n          // console.log(tx.action,tx.protocol,tx.token,tokenAmount.toString(),amountLent.toString());\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n         // console.log(token,conversionRateBlocksCalls);\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = tokenConfig ? tokenConfig.decimals : 18;\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n\n                  // console.log(token,trancheTokens.toString(),tranchePrice.toString(),newBalance.toString());\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n\n          // console.log(token,trancheTokenBalance[token][tranche].toString(),lastTx.tranchePrice.toString(),lastTxBalance.toString());\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('userHasFunds', userHasFunds, this.props.portfolio.tranchesBalance, this.props.tokenConfig.CDO.name)\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    gaugeConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    selectedTranche:null,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  loadQueryParams(){\n    const trancheRoute = this.props.urlParams.param1;\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n    if (trancheDetails !== undefined) {\n      const trancheType = trancheDetails.type;\n      const selectedTranche = this.props.urlParams.param3;\n      const selectedProtocol = this.props.urlParams.param2;\n      const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null) : null;\n      const selectedToken = tokenConfig ? tokenConfig.token : null;\n      const gaugeConfig = tokenConfig ? this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche) : null;\n\n      this.setState({\n        trancheType,\n        tokenConfig,\n        gaugeConfig,\n        trancheRoute,\n        selectedToken,\n        trancheDetails,\n        selectedTranche,\n        selectedProtocol\n      });\n    } else {\n      const selectedTranche = this.props.urlParams.param2;\n      const selectedProtocol = this.props.urlParams.param1;\n      const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null;\n      if (tokenConfig){\n        const selectedToken = tokenConfig.token;\n        const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche);\n        this.setState({\n          tokenConfig,\n          gaugeConfig,\n          selectedToken,\n          selectedTranche,\n          selectedProtocol\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    const tranchesTvls = [];\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches[protocol]), async (token) => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        const trancheConfig = tokenConfig.AA;\n        tranchesTvls.push({\n          token,\n          protocol,\n          tvl:parseFloat(await this.functionsUtil.loadTrancheFieldRaw('tranchePoolConverted', {decimals:2,maxPrecision:999,minPrecision:0}, protocol, token, null, tokenConfig, trancheConfig))\n        });\n      });\n    });\n\n    const tranchesOrdering = tranchesTvls.sort((a, b) => (parseInt(a.tvl) < parseInt(b.tvl) ? 1 : -1));\n\n    this.setState({\n      tranchesOrdering\n    });\n\n    this.loadQueryParams();\n\n    this.loadPortfolio().then( () => {\n\n      if (!!this.state.trancheDetails) {\n\n        if (this.state.userHasFunds && !this.state.tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        const useTrancheType = !this.state.userHasFunds;\n        this.setState({\n          useTrancheType\n        });\n      }\n\n      this.setState({\n        componentLoaded:true\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    let availableTranches = {...this.props.availableTranches};\n    if (this.state.selectedProtocol && this.state.selectedTranche){\n      availableTranches = {\n        [this.state.selectedProtocol]:{\n          [this.state.selectedTranche]:availableTranches[this.state.selectedProtocol][this.state.selectedTranche]\n        }\n      }\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(availableTranches,this.props.account);\n\n    // console.log('portfolio', this.state.selectedProtocol, this.state.selectedTranche, portfolio);\n\n    if (portfolio){\n      const depositedCdos = [];\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n\n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n\n        // Push deposited CDO instead of token\n        depositedCdos.push(trancheInfo.cdo);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(availableTranches).forEach( protocol => {\n        Object.keys(availableTranches[protocol]).forEach( token => {\n          const tokenConfig = availableTranches[protocol][token];\n          if(depositedCdos.includes(tokenConfig.CDO.name)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][token]={}\n              depositedTranches[protocol][token]=availableTranches[protocol][token];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][token]={};\n            remainingTranches[protocol][token]=availableTranches[protocol][token];\n          }\n        })\n      })\n\n      // console.log('tranchesTokens', tranchesTokens)\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedTranche}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedTranche){\n      breadcrumbPath.push(this.state.selectedTranche);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              gaugeConfig={this.state.gaugeConfig}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'statusIcon',\n                              props:{\n                                ml:2,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.13],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      tranchesOrdering={this.state.tranchesOrdering}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.15]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'statusIcon',\n                            props:{\n                              ml:2,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.11],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    tranchesOrdering={this.state.tranchesOrdering}\n                    availableTranches={this.props.account ? this.state.remainingTranches : this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    eventData:{},\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n\n        let eventData = {};\n        switch (this.state.increaseAction){\n          case 'time':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseTime',\n              eventValue:this.state.lockPeriodInput\n            };\n          break;\n          case 'amount':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseAmount'\n            };\n          break;\n          default:\n          break;\n        }\n\n        // console.log('eventData',eventData);\n\n        this.setState({\n          eventData,\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let eventData = {};\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_Lock',\n          eventLabel:_unlock_time\n        };\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_IncreaseAmount'\n        };\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      eventData\n    });\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // if (newState.increaseAction !== this.state.increaseAction){\n    //   this.setIncreaseAction(newState.increaseAction);\n    // }\n\n    // Select Withdraw if the lock has expired\n    if (['Increase Lock','Lock'].includes(selectedAction) && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                ) : this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          eventData={this.state.eventData}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        eventData={this.state.eventData}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                eventData={{\n                                  eventCategory:'Staking_Withdraw',\n                                  eventAction:this.props.selectedToken\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  eventData={{\n                                    eventCategory:'Staking_Claim',\n                                    eventValue:this.state.claimable.toFixed(8),\n                                    eventAction:this.props.contractInfo.rewardToken\n                                  }}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.claimableAmount) ? this.state.selectedCoverToClaim.claimableAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n        const gaugeWorkingSupply = userBoostInfo.workingSupply;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(this.functionsUtil.BNify(gaugeWorkingSupply).plus(userWorkingBalance));\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        // console.log(gaugeToken,gaugeWeight.toFixed(),userBoostInfo,this.functionsUtil.BNify(userWorkingBalance).toFixed(),this.functionsUtil.BNify(gaugeWorkingSupply).toFixed(),userBoostedShare.toFixed());\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stMATIC from '../abis/lido/stMATIC.json';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v7.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio: \"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    bestYieldDisabledMessage: \"Deposits for this strategy are no longer available, please redeem your funds.\",\n    aysShort: \"This strategy automatically adjusts the yield split between the Senior and the Junior tranche\",\n    autoFarming: \"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  lido:{\n    rates:{\n      path:['apr'],\n      endpoint:'https://api.idle.finance/poLidoStats',\n      config: {\n        headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n      },\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: false,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      },\n      stMATIC:{\n        abi:stMATIC,\n        address:'0x9ee91F9f426fA633d227f7a9b000E28b9dfd8599'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      CPOOL: {\n        decimals: 18,\n        enabled: true,\n        label: 'CPOOL',\n        token: 'CPOOL',\n        color: {\n          hex: '#5F73F4',\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        },\n        address: '0x66761fa41377003622aee3c7675fc7b5c1c2fac5'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: false,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      TRU: {\n        token: 'TRU',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#195bff',\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        },\n        disabledCharts: ['score'],\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x4c19596f5aaff459fa38b0f7ed92f11ae6543784',\n      },\n      AGEUR: {\n        decimals: 18,\n        enabled: true,\n        token: 'AGEUR',\n        color: {\n          hex: '#fbcea9',\n          rgb: [251, 206, 169],\n          hsl: ['27', '91%', '82%']\n        },\n        // conversionRateForceToken: 'USDC',\n        // conversionRateInvertTokens: true,\n        // conversionRateField: 'ageurDAIPrice',\n        // conversionRateDirectConversion: true,\n        // conversionRouterMethod: 'getAmountsOut',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: false,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: false,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      wintermute: {\n        legend: false,\n        enabled: true,\n        label: \"Wintermute\",\n        color: {\n          rgb: [163, 236, 38],\n          hsl: [\"82\", \"84%\", \"54%\"]\n        }\n      },\n      clearpool: {\n        legend: false,\n        enabled: true,\n        label: \"Clearpool\",\n        color: {\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        }\n      },\n      truefi: {\n        legend: false,\n        enabled: true,\n        label: \"TrueFi\",\n        color: {\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: false,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    weeksPerYear: 52.1429,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        endpoints: {\n          checkpoint: 'https://heimdall-api.polygon.technology/checkpoints/'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    LDO: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          AGEUR:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'AGEUR',\n            name: \"LiquidityGauge_aa_euler_ageur\",\n            token: \"LiquidityGauge_aa_euler_ageur\",\n            address:'0x8f195979f7af6c500b4688e492d07036c730c1b2',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_AGEUR',\n              token: 'AA_euler_AGEUR',\n              address: '0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n            }\n          },\n          USDC:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDC',\n            name: \"LiquidityGauge_aa_euler_usdc\",\n            token: \"LiquidityGauge_aa_euler_usdc\",\n            address:'0x1cd24f833af78ae877f90569eaec3174d6769995',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDC',\n              token: 'AA_euler_USDC',\n              address: '0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n            }\n          },\n          DAI:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'DAI',\n            name: \"LiquidityGauge_aa_euler_dai\",\n            token: \"LiquidityGauge_aa_euler_dai\",\n            address:'0x57d59d4bbb0e2432f1698f33d4a47b3c7a9754f3',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_DAI',\n              token: 'AA_euler_DAI',\n              address: '0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n            }\n          },\n          USDT:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDT',\n            name: \"LiquidityGauge_aa_euler_usdt\",\n            token: \"LiquidityGauge_aa_euler_usdt\",\n            address:'0x0c3310b0b57b86d376040b755f94a925f39c4320',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDT',\n              token: 'AA_euler_USDT',\n              address: '0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    let orderedTranches = [];\n    if (this.props.tranchesOrdering){\n      this.props.tranchesOrdering.forEach( t => {\n        if (enabledProtocols.includes(t.protocol)){\n          const token = t.token;\n          const protocol = t.protocol;\n          if (this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token]){\n            const tokenConfig = this.props.availableTranches[protocol][token];\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n        }\n      });\n    } else {\n      enabledProtocols.forEach(protocol => {\n        const protocolTranches = this.props.availableTranches[protocol];\n        if (!protocolTranches){\n          return null;\n        }\n        Object.keys(protocolTranches).forEach( token => {\n          const tokenConfig = protocolTranches[token];\n          if (tokenConfig){\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n         })\n      })\n    }\n\n    const depositedTokens = this.props.depositedTokens;\n    if (depositedTokens){\n      orderedTranches = orderedTranches.filter( t => {\n        return depositedTokens.find( d => d.token === t.token && d.protocol === t.protocol )\n      });\n    }\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n        id={\"tranches-list-container\"}\n      >\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        {\n          orderedTranches && orderedTranches.length>0 && (\n            <Flex\n              id={\"tranches-list\"}\n              flexDirection={'column'}\n            >\n              {\n                orderedTranches.map( p => {\n                  const token = p.token;\n                  const protocol = p.protocol;\n                  const tokenConfig = p.tokenConfig;\n                  const tranche = this.props.trancheType || null;\n                  return (\n                    <TableRow\n                      {...this.props}\n                      token={token}\n                      tranche={tranche}\n                      protocol={protocol}\n                      tokenConfig={tokenConfig}\n                      rowId={`tranche-col-${protocol}`}\n                      cardId={`tranche-card-${protocol}`}\n                      key={`tranche-${protocol}-${token}`}\n                      fieldComponent={this.props.fieldComponent || TrancheField}\n                    />\n                  )\n                })\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: ['beta'],\n        canDeposit: {\n          enabled: false,\n          disabledMessageDepositKey: 'bestYieldDisabledMessage'\n        },\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider && this.walletLink){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        this.initAccount(accounts[0]);\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('connectorNameChanged',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context.active !== this.props.context.active || prevProps.context.connectorName !== this.props.context.connectorName || JSON.stringify(prevProps.context.error) !== JSON.stringify(this.props.context.error) ) {\n      // console.log('contextChanged',this.props.connectorName,this.props.context.connectorName,this.props.context.active,this.props.context.error);\n\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName && setConnectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('connectorNameChanged_2',this.props.context.connectorName,this.props.context.connectorName,this.props.connectorName);\n      setConnectorName = this.props.connectorName;\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n      // this.initWeb3();\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    let useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      useWeb3Provider = false; // Disable web3 provider for Infura\n      context.unsetConnector();\n      // setConnectorName = null;\n    } else if (connectorName !== 'Infura') {\n      const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n      // console.log('initWeb3 connectorNameChanged',connectorName,context.connectorName,setConnectorName,!context.active,connectorNameChanged);\n\n      // Set the connector\n      if (connectorName !== 'ledgerLive'){\n        if (!context.active || connectorNameChanged) {\n          // Select preferred web3 provider\n          if (connectorName && connectorNameChanged){\n\n            if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n              return false;\n            }\n\n            // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n            setConnectorName = connectorName;\n            await context.setConnector(connectorName);\n            // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n            // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n            // return this.initWeb3();\n            return web3;\n          }\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    // Forse enable provider\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const biconomyEnabled = biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()));\n\n    // console.log('initWeb3',initWeb3Index,biconomyEnabled,connectorName,web3,context,web3Provider,'UPDATE',web3 !== this.state.web3);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyEnabled){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            // if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n            //   console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n            //   return false;\n            // }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = (this.state.network.isCorrectNetwork ? this.state.web3 : (networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : this.state.web3Providers[this.state.network.required.id]));\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      await this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=null) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (!account && this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      let wallets = null;\n\n      if (!account){\n        wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n      \n      // console.log('initAccount',wallets,this.props.context.account,this.state.account,account);\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks,this.state.web3);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n\n              const strategyConfig = tokenConfig.Strategy;\n              if (strategyConfig.address){\n                contracts.push(this.initContractWithoutSet(tokenConfig.Strategy.name,strategyConfig.address,strategyConfig.abi));\n              }\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import DAI from '../abis/tokens/DAI.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport TruefiPool from '../abis/truefi/TruefiPool.json';\nimport Clearpool from '../abis/clearpool/Clearpool.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13054628,\n        enabledEnvs: ['beta'],\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield',\n          address:'0x48a48c6694168093A3dEE02E9e8AC5a14169a652'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13575397,\n        enabledEnvs: ['beta'],\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield',\n          address:'0x73A44027bDAF5D71296d2C73cfb13e561c76a916'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH',\n          address:'0x0cac674ebD77bBD899f6079932768f6d59Da089A'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      },\n      MATIC:{\n        abi:ERC20,\n        decimals:18,\n        token:'MATIC',\n        protocol:'lido',\n        blockNumber:15623682,\n        enabledEnvs: ['beta'],\n        getApyFromApi:{\n          path:['apr'],\n          protocol:'polido',\n          apyLabel:'stMATIC APR'\n        },\n        customAprFunction:'getMaticTrancheApy',\n        additionalAprFunction:'getMaticTrancheAdditionalApy',\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_MATIC',\n          address:'0xF87ec7e1Ee467d7d78862089B92dd40497cBa5B8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_lido_MATIC',\n          customAprFunction:'getMaticTrancheStrategyApr',\n          address:'0x6110deC9faC2A721c0EEe64B769A7E4cCcf4aa81'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          icon:'images/warning-2.png',\n          id:'modal_lido_matic_withdraw',\n          title:'Lido stMATIC unstake period',\n          text:'When you withdraw your funds from the tranche you will receive an NFT representing your redeemed amount, default stMATIC unstaking period takes around 3-4 days (80 epochs) to process. After that you can claim your rewards directly from <a href=\"https://polygon.lido.fi\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://polygon.lido.fi</a> in Claim tab. More info at <a href=\"https://docs.polygon.lido.fi/how-lido-on-polygon-works/#unstake-tokens\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.polygon.lido.fi/how-lido-on-polygon-works/#unstake-tokens</a>'\n        },\n        messages:{\n          pendingNFTAmount:'Claim your rewards directly from <a href=\"https://polygon.lido.fi\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://polygon.lido.fi</a> in Claim tab.',\n          withdraw:'By withdrawing you will receive an NFT representing your redeemed funds, then you need to claim your funds directly from <a href=\"https://polygon.lido.fi\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://polygon.lido.fi</a>'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n            pendingNFTAmount:'getMaticTrancheNFTs'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_MATIC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15623682,\n          name:'AA_lido_MATIC',\n          token:'AA_lido_MATIC',\n          label:'lido MATIC AA',\n          address:'0xAEf4FCC4E5F2dc270760063446d4116D24704Ad1'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            pendingNFTAmount:'getMaticTrancheNFTs'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_MATIC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15623682,\n          name:'BB_lido_MATIC',\n          token:'BB_lido_MATIC',\n          label:'lido MATIC BB',\n          address:'0x077212c69A66261CF7bD1fd3b5C5db7CfFA948Ee'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        getApyFromApi:{\n          protocol:'curve',\n          apyLabel:'Curve vAPR',\n          path:['apy','day','frax'],\n        },\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv',\n          address:'0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        enabledEnvs: ['beta'],\n        getApyFromApi:{\n          protocol:'curve',\n          apyLabel:'Curve vAPR',\n          path:['apy','day','mim'],\n        },\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv',\n          address:'0x35168324dC1981aDDc3bC915788e200BeDF77865'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        getApyFromApi:{\n          protocol:'curve',\n          apyLabel:'Curve vAPR',\n          path:['apy','day','steth'],\n        },\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV',\n          address:'0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv',\n          address:'0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur',\n          address:'0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        enabledEnvs: ['beta'],\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv',\n          address:'0x271cE5dED4cCbD28833bddF8a8093517299920f0'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv',\n          address:'0x0198792f2849397908C092b6B57654e1a57a4CDC'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14785127,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC',\n          address:'0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      },\n      levUSDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:15445762,\n        enabledEnvs: ['beta'],\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_levUSDC',\n          address:'0xcb2bd49d4b7874e6597dedfaa3e7b4e01831c5af'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_levUSDC',\n          address:'0xee5ec95ce2c8700a2d152db3249fa13b163f0073'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_levUSDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC AA',\n          name:'AA_euler_levUSDC',\n          token:'AA_euler_levUSDC',\n          address:'0x9F94fa97cC2d48315015040708D12aB855283164'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_levUSDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC BB',\n          name:'BB_euler_levUSDC',\n          token:'BB_euler_levUSDC',\n          address:'0x617648B846512E2F49dC21Bf27e4505C285E6977'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961854,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_DAI',\n          address:'0x46c1f702a6aad1fd810216a5ff15aab1c62ca826'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_DAI',\n          address:'0xc7F1B9C72B8230E470420A4b69af7c50781A3f44'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_DAI',\n          blockNumber:14961854,\n          token:'AA_euler_DAI',\n          label:'euler DAI AA',\n          address:'0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14961854,\n          name:'BB_euler_DAI',\n          token:'BB_euler_DAI',\n          label:'euler DAI BB',\n          address:'0x6629baA8C7c6a84290Bf9a885825E3540875219D'\n        }\n      },\n      USDT:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDT',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961973,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDT',\n          address:'0xD5469DF8CA36E7EaeDB35D428F28E13380eC8ede'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDT',\n          address:'0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDT_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDT',\n          blockNumber:14961973,\n          token:'AA_euler_USDT',\n          label:'euler USDT AA',\n          address:'0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDT_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'BB_euler_USDT',\n          blockNumber:14961973,\n          token:'BB_euler_USDT',\n          label:'euler USDT BB',\n          address:'0xb1EC065abF6783BCCe003B8d6B9f947129504854'\n        }\n      },\n      AGEUR:{\n        abi:ERC20,\n        decimals:18,\n        token:'AGEUR',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:15055915,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_AGEUR',\n          address:'0x2398Bc075fa62Ee88d7fAb6A18Cd30bFf869bDa4'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_AGEUR',\n          address:'0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_AGEUR_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_AGEUR',\n          blockNumber:15055915,\n          token:'AA_euler_AGEUR',\n          label:'euler AGEUR AA',\n          address:'0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_AGEUR_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15055915,\n          name:'BB_euler_AGEUR',\n          token:'BB_euler_AGEUR',\n          label:'euler AGEUR BB',\n          address:'0xcf5FD05F72cA777d71FB3e38F296AAD7cE735cB7'\n        }\n      }\n    },\n    clearpool:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        blockNumber:15044679,\n        protocol:'clearpool',\n        autoFarming:['CPOOL'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_USDC',\n          address:'0xDBCEE5AE2E9DAf0F5d93473e08780C9f45DfEb93'\n        },\n        Pool:{\n          abi:Clearpool,\n          name:'Pool_clearpool_USDC',\n          address:'0xcb288b6d30738db7e3998159d192615769794b5b'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_USDC',\n          address:'0x54ae90be2dee0a960953c724839541e75bb1f471'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xCb288b6d30738db7E3998159d192615769794B5b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_clearpool_USDC',\n          token:'AA_clearpool_USDC',\n          label:'clearpool USDC AA',\n          address:'0xb86264c21418aA75F7c337B1821CcB4Ff4d57673'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_clearpool_USDC',\n          token:'BB_clearpool_USDC',\n          label:'clearpool USDC BB',\n          address:'0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d'\n        }\n      }\n    },\n    truefi:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        protocol:'truefi',\n        autoFarming:['TRU'],\n        blockNumber:15326147,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        // adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_truefi_USDC',\n          address:'0x1f5A97fB665e295303D2F7215bA2160cc5313c8E'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_truefi_USDC',\n          address:'0x62B17c9083Db5941197E83BD385985B8878B58Fb'\n        },\n        Pool:{\n          abi:TruefiPool,\n          name:'Pool_truefi_USDC',\n          address:'0xA991356d261fbaF194463aF6DF8f0464F8f1c742'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          title:'Truefi exit fee',\n          icon:'images/warning-2.png',\n          id:'modal_truefi_usdc_exit_fee',\n          text:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool, in addition to the performance fee. Read more at <a href=\"https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit</a>'\n        },\n        messages:{\n          withdraw:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool.',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.truefi.io/pools/0xA991356d261fbaF194463aF6DF8f0464F8f1c742\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Truefi USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_truefi_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_truefi_USDC',\n          token:'AA_truefi_USDC',\n          label:'truefi USDC AA',\n          address:'0x868bb78fb045576162B510ba33358C9f93e7959e'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_truefi_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_truefi_USDC',\n          token:'BB_truefi_USDC',\n          label:'truefi USDC BB',\n          address:'0x6EdE2522347E6a5A0420F41f42e021246e97B540'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    paused: \"#ff7100\",\n    disabledBg: '#8e8d8d',\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    let formattedValue = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'statusIcon':\n        output = null;\n        if (!!this.props.tokenConfig.disabled) {\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool has been disabled, please redeem your funds`}\n            >\n              <Image src={`images/warning-2.png`} {...fieldProps} />\n            </Tooltip>\n          )\n        } else if (this.state.statusIcon === 'paused') {\n          output = (<Tooltip\n            placement={'top'}\n            message={`Deposits for this pool have been temporarily paused due to Smart-Contract maintenance`}\n          >\n            <Image src={`images/pause.svg`} {...fieldProps} />\n          </Tooltip>)\n        } else {\n          output = (\n            <TrancheField\n              {...this.props}\n              fieldInfo={{\n                ...fieldInfo,\n                name:'experimentalBadge'\n              }}\n            />\n          );\n        }\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.functionsUtil.BNify(this.state[fieldInfo.name]).gt(0) && this.functionsUtil.BNify(this.state[fieldInfo.name]).lte(5000000)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state[fieldInfo.name], 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (!!this.props.tokenConfig.disabled){\n            badgeText = 'Disabled';\n            badgeColor = 'disabledBg';\n          } else if (!this.functionsUtil.BNify(this.state.statusBadge).isNaN() && this.functionsUtil.BNify(this.state.statusBadge).gt(0) && this.functionsUtil.BNify(this.state.statusBadge).lte(5000000)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else if (this.state.statusBadge === 'paused'){\n            badgeText = 'Deposits Paused';\n            badgeColor = 'paused';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.tokenConfig.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheAPRSplitRatio':\n        output = this.state[fieldInfo.name];\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n            {\n              (typeof this.props.tokenConfig.adaptiveYieldSplitEnabled === 'undefined' || this.props.tokenConfig.adaptiveYieldSplitEnabled) && (\n                <Tooltip\n                  placement={'top'}\n                  message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n                >\n                  <Image ml={2} src={`images/ays.svg`} height={['1.4em','1.8em']} {...fieldProps} />\n                </Tooltip>\n              )\n            }\n          </Flex>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n      case 'trancheAYS':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n          >\n            <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n"],"sourceRoot":""}