{"version":3,"sources":["ImageButton/ImageButton.js","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","CustomList/CustomList.js","FlexLoader/FlexLoader.js","ExtLink/ExtLink.js","Title/Title.js","AssetField/AssetField.js","RoundButton/RoundButton.js"],"names":["ImageButton","isMobile","this","props","image","imageSrc","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","src","imageProps","iconName","name","iconProps","caption","textAlign","fontSize","fontWeight","color","borderRadius","px","py","my","mx","onClick","handleClick","height","mainColor","isActive","contrastColor","style","buttonStyle","justifyContent","buttonProps","Fragment","badge","position","backgroundColor","bgColor","right","top","text","flexDirection","alignItems","mr","captionPos","subcaption","split","map","v","i","key","concat","lineHeight","Component","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","length","ml","hoverColor","path","index","link","pathLink","Link","Text","pl","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","ShortHash","state","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","module","exports","trancheFlash","mobile","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","headerContainer","headerBgFiller","bgContainer","list","textContainer","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","left","data","itemPos","xFormatted","mb","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","tokenName","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isDisabled","useIconOnly","iconColor","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","cardBgContrast","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","oldContract","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","async","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","getLastAllocations","_ref178","_callee110","tokenAllocations","_context110","_ref179","_callee109","_context109","_x192","_x193","_x191","_ref180","_callee111","protocolsAprs","_ref181","_ref182","govTokensBalances","_args111","_context111","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x194","getSushiswapPoolTokenPrice","_ref183","_callee112","pairAddresses","_ref184","_ref185","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref186","_ref187","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context112","getSushiswapConversionRate","_x195","_x196","_ref188","_callee113","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context113","_x197","_x198","_ref189","_callee114","unires","_context114","addressForPrice","_x199","_x200","getCurveDepositedTokens","_ref190","_callee115","idleTokensBalances","remainingCurveTokens","_args115","_context115","_x201","getCurveUnevenTokenAmounts","_ref191","_callee116","amounts","max_burn_amount","unevenAmounts","_context116","getCurveDepositContract","_x202","_x203","_callee117","curveRatesInfo","_context117","strategyTokens","getCurveAPYContract","_callee118","blocksForPrevTokenPrice","_ref194","_ref195","prevTokenPrice","blocksMultiplier","curveAPR","_context118","getCurveTokenSupply","_callee119","_context119","getCurvePoolContract","_callee120","_args120","_context120","_callee121","_args121","_context121","_ref199","_callee122","_ref200","_ref201","_context122","_x204","_callee123","depositContractInfo","_context123","getCurveZapContract","_callee124","zapContractInfo","_context124","_callee125","poolContractInfo","_context125","getCurveSwapContract","_callee126","migrationContractInfo","_context126","getCurveIdleTokensAmounts","_callee128","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args128","_context128","_ref207","_callee127","coinIndex","curveIdleTokens","_context127","migrationParams","_x205","getCurveTokensAmounts","_callee130","useCoinIndex","_args130","_context130","_ref209","_callee129","_ref210","_ref211","idleTokenPrice","totalTokenSupply","_context129","_x206","getCurveAmounts","_ref212","_callee132","_args132","_context132","_ref213","_callee131","_context131","_x209","_x207","_x208","getCurveTokenAmount","_ref214","_callee133","_args133","_context133","_x210","getCurveSlippage","_ref215","_callee134","uneven_amounts","depositContract","_ref216","_ref217","Sv","_args134","_context134","_x211","_x212","_ref218","_callee135","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref219","_ref220","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args135","_context135","_x213","_callee137","_args137","_context137","_ref222","_callee136","_ref223","_ref224","_context136","_x214","getStkAaveApr","_ref225","_callee138","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args138","_context138","_x215","_x216","getCompAPR","_ref226","_callee139","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args139","_context139","_x217","_x218","getCompSpeed","_ref227","_callee140","cTokenAddress","compSpeed","_context140","_x219","_ref228","_callee141","cTokenInfo","compoundAllocationPerc","_ref229","_ref230","cTokenTotalSupply","compoundPoolShare","_args141","_context141","_x220","_callee143","_args143","_context143","_ref232","_callee142","_ref233","_ref234","_context142","_x221","_callee145","_args145","_context145","_ref236","_callee144","_ref237","_ref238","compApr","_context144","_x222","getTokensCsv","_callee148","csv","_context148","prototype","sum","pv","cv","avg","_ref240","_callee147","strategy","_context147","_ref241","_callee146","header","aprAvg","scoreAvg","lastRow","_context146","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x224","_x223","_callee150","govToken","convertToken","_args150","_context150","_ref243","_callee149","compTokenBalance","_context149","_x225","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref244","_callee152","govTokensUserDistribution","_args152","_context152","_ref245","_callee151","_context151","_x227","_x226","_ref246","_callee154","govTokensDistribution","tokenGovTokens","_args154","_context154","_ref247","_callee153","govSpeed","_context153","_x229","_x228","getGovTokensAprs","_ref248","_callee156","govTokensAprs","_args156","_context156","_ref249","_callee155","_ref250","_ref251","_ref252","_ref253","cTokenConfig","_context155","aprTooltipMode","_x232","_x230","_x231","_callee158","_args158","_context158","_ref255","_callee157","govTokenBalance","tokenConversionRate","fromTokenConfig","_context157","_x233","_callee159","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args159","_context159","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref257","_callee161","govTokensAmounts","_context161","getGovTokensUserAmounts","_ref258","_callee160","_context160","getGovTokenAddessByIndex","_x236","_x237","_x234","_x235","_ref259","_callee162","_context162","_x238","_x239","_ref260","_callee163","_context163","_x240","_x241","_callee166","govTokenConfigForced","_args166","_context166","_ref262","_callee165","_context165","_ref263","_callee164","_context164","_x243","_x244","_x242","getTokenFees","_callee167","_args167","_context167","_callee168","_ref266","_ref267","feePercentage","gain","fees","_args168","_context168","_ref268","_callee169","_args169","_context169","_x245","getTotalTVL","_callee170","tokensTVL","_context170","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee174","_context174","_ref271","_callee173","_context173","_ref272","_callee172","oldTokenTVL","idleTokenName","_ref273","_ref274","oldTokenConfig","_ref278","_ref279","oldTokenPrice","oldTotalSupply","_context172","showAUM","_ref275","_callee171","_ref276","_ref277","govTokenConversionRate","govTokenBalanceConverted","_context171","_x248","oldProtocols","oldProtocol","protocolPos","_x247","_x246","getSubstackLatestFeed","_callee175","endpointInfo","idleSubstackFeed","latestFeed","_context175","items","getAggregatedStats","_callee176","tvls","totalAUM","_args176","_context176","getAggregatedStats_chain","_callee180","avgAPR","_args180","_context180","_ref283","_callee179","_context179","_ref284","_callee178","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context178","_ref285","_callee177","_ref286","_ref287","_context177","_x251","_x250","_x249","getTokenApy","_ref288","_callee181","_context181","_x252","getTokensToMigrate","_callee184","tokensToMigrate","_args184","_context184","_ref290","_callee183","_context183","_ref291","_callee182","_ref292","_context182","_x254","_x253","getProtocolsTokensBalances","_callee186","tokenBalances","minTokenBalance","protocolsTokens","_args186","_context186","_ref294","_callee185","tokenContract","_context185","_x255","_ref295","_callee187","_args187","_context187","_x256","_x257","_x258","getAvgAPYStats","_ref296","_callee188","apiResults","_args188","_context188","_x259","_x260","_ref297","_callee189","count","_conversionRate","_args189","_context189","_x261","_x262","getTokenScore","_ref298","_callee190","_ref299","_ref300","tokenScore","_context190","protocolScore","getTokenScoreApi","_x263","_x264","_ref301","_callee191","scores","_context191","_x265","_x266","_ref302","_callee192","idleGovTokenShowAPR","idleAPR","_args192","_context192","_x267","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","defiScoreDisabled","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.d1d04bc0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision)+` ${tokenName}` }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    \"near-black\": \"#111\",\n    \"dark-gray\": \"#4e4e4e\",\n    \"mid-gray\": \"#999\",\n    gray: \" #e0e0e0\",\n    grey: \"#CCC\",\n    silver: \"#999\",\n    \"light-silver\": \"#aaa\",\n    \"moon-gray\": \"#ccc\",\n    \"light-gray\": \"#eee\",\n    \"near-white\": \"#f4f4f4\",\n\n    white: \"#fff\",\n    transparent: \"transparent\",\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    cardBgContrast: \"#fafafa\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n      return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n    });\n    return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n      lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n      return lastAllocations;\n    },{});\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport IDLE from \"../contracts/IDLE.json\";\nimport WETH from \"../abis/tokens/WETH.json\";\nimport ERC20 from \"../contracts/ERC20.json\";\nimport Tranches from \"../Tranches/Tranches\";\nimport COMP from \"../abis/compound/COMP.json\";\nimport aToken from \"../abis/aave/AToken.json\";\nimport TokenSwap from \"../TokenSwap/TokenSwap\";\nimport yDAIv3 from \"../abis/iearn/yDAIv3.json\";\nimport LpStaking from \"../LpStaking/LpStaking\";\nimport stkIDLE from \"../contracts/stkIDLE.json\";\nimport yUSDCv3 from \"../abis/iearn/yUSDCv3.json\";\nimport yUSDTv3 from \"../abis/iearn/yUSDTv3.json\";\nimport ySUSDv3 from \"../abis/iearn/ySUSDv3.json\";\nimport yTUSDv3 from \"../abis/iearn/yTUSDv3.json\";\nimport Timelock from \"../contracts/Timelock.json\";\nimport CurveZap from \"../abis/curve/CurveZap.json\";\nimport CovToken from \"../abis/cover/CovToken.json\";\nimport B2BVester from \"../contracts/B2BVester.json\";\nimport IdleStaking from \"../IdleStaking/IdleStaking\";\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport EarlyRewards from \"../contracts/EarlyRewards.json\";\nimport CoverProtocol from \"../CoverProtocol/CoverProtocol\";\nimport CurveDeposit from \"../abis/curve/CurveDeposit.json\";\nimport VesterFactory from \"../contracts/VesterFactory.json\";\nimport GovernorAlpha from \"../contracts/GovernorAlpha.json\";\nimport EcosystemFund from \"../contracts/EcosystemFund.json\";\nimport Comptroller from \"../abis/compound/Comptroller.json\";\nimport erc20Forwarder from \"../contracts/erc20Forwarder.json\";\nimport BalancerPool from \"../abis/balancer/BalancerPool.json\";\nimport IdleController from \"../contracts/IdleController.json\";\nimport TokenMigration from \"../TokenMigration/TokenMigration\";\nimport BatchMigration from \"../BatchMigration/BatchMigration\";\nimport IdleBatchedMint from \"../contracts/IdleBatchedMint.json\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\nimport IdleProxyMinter from \"../contracts/IdleProxyMinter.json\";\nimport IdleRebalancerV3 from \"../contracts/IdleRebalancerV3.json\";\nimport LiquidityGaugeV2 from \"../abis/curve/LiquidityGaugeV2.json\";\nimport DeployB2BVesting from \"../DeployB2BVesting/DeployB2BVesting\";\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage:\n      \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint:\n      \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee:\n      \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr:\n      \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance:\n      \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort:\n      \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov:\n      \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule:\n      \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    apyLong:\n      \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    yieldFarming:\n      'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    baseRoute: \"/governance\",\n    props: {\n      tokenName: \"IDLE\",\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      12:{\n        description:'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.png\",\n      disabledTokens: [\"idleFEIYield\"], // Disable IDLE distribution for idleToken\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\" // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: \"stkAAVE\",\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: \"aavev2\",\n      aprTooltipMode: false,\n      distributionMode: \"second\",\n      color: \"hsl(314, 41%, 51%)\",\n      distributionFrequency: \"day\",\n      address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\", // MAIN\n      addressForPrice: \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\", // MAIN\n      disabledTokens: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"],\n    }\n  },\n  contracts: {\n    ProxyFactory: {\n      abi: MinimalInitializableProxyFactory,\n      address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n    },\n    LockedIDLE: {\n      abi: LockedIDLE,\n      address: \"0xF241a0151841AE2E6ea750D50C5794b5EDC31D99\"\n    },\n    FeeTreasury: {\n      abi: FeeTreasury,\n      address: \"0x69a62c24f16d4914a48919613e8ee330641bcb94\" // MAIN\n    },\n    PriceOracle: {\n      abi: PriceOracle,\n      address: \"0x972A64d108e250dF98dbeac8170678501f5EF181\" // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock: {\n      abi: Timelock,\n      address: \"0xD6dABBc2b275114a2366555d6C481EF08FDC2556\" // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund: {\n      abi: EcosystemFund,\n      address: \"0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7\" // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory: {\n      abi: VesterFactory,\n      address: \"0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972\" // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController: {\n      abi: IdleController,\n      address: \"0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE\" // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards: {\n      abi: EarlyRewards,\n      address: \"0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc\" // MAIN\n      // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha: {\n      abi: GovernorAlpha,\n      address: \"0x2256b25CFC8E35c3135664FD03E77595042fe31B\" // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller: {\n      abi: Comptroller,\n      address: \"0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b\" // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter: {\n      abi: SushiV2Router02,\n      address: \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\"\n    },\n    UniswapRouter: {\n      abi: UniswapV2Router02,\n      address: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\n    },\n    BalancerExchangeProxy: {\n      abi: BalancerExchangeProxy,\n      address: \"0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21\"\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\n      \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\n          \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\n          \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  extraicons:{\n    best:{\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark:\"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches:{\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark:\"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk:{\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark:\"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats:{\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark:\"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools:{\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark:\"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum:{\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark:\"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake:{\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark:\"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      iconName: \"Whatshot\",\n      component: Tranches,\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\n        \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\n        \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\n        \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/rates/\"\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: \"https://api.idle.finance/tvls/\"\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: \"https://api.idle.finance/substack/\"\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/scores/\"\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY\n        ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` }\n        : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI','FEI'],\n        additionalProtocols:[\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: \"#F7B24A\",\n          hsl: [\"40\", \"95%\", \"59%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 2]\n        },\n        startTimestamp: \"2020-02-11\",\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        icon: \"images/tokens/IDLE.png\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-09-24',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n\n      \"idleDAI+idleUSDC+idleUSDT\": {\n        decimals: 18,\n        enabled: false,\n        name: \"Curve.fi\",\n        color: {\n          hex: \"#ff0000\",\n          rgb: [255, 0, 0],\n          hsl: [\"0\", \"100%\", \"50%\"]\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: {\n    // Network configurations\n    availableNetworks: {\n      1: \"Mainnet\",\n      3: \"Ropsten\",\n      4: \"Rinkeby\",\n      42: \"Kovan\",\n      1337: \"Hardhat\"\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    firstBlockNumber: 8119247,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 42, 1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        42: \"https://kovan.infura.io/v3/\",\n        1: \"https://mainnet.infura.io/v3/\",\n        1337: \"https://mainnet.infura.io/v3/\"\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: \"https://api.etherscan.io/api\",\n          1337: \"https://api.etherscan.io/api\",\n          42: \"https://api-kovan.etherscan.io/api\"\n        },\n        baseUrl: {\n          1: \"https://etherscan.io\",\n          1337: \"https://etherscan.io\",\n          42: \"https://kovan.etherscan.io\"\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.png\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:\n        'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: \"ETH Wrapper\",\n      route: \"eth-wrapper\",\n      subComponent: TokenWrapper,\n      image: \"images/tokens/WETH.svg\",\n      desc: \"Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.\",\n      props: {\n        startContract: {\n          name: \"ETH\",\n          token: \"ETH\",\n          decimals: 18,\n          wrapMethod: \"deposit\"\n        },\n        destContract: {\n          abi: WETH,\n          name: \"WETH\",\n          decimals: 18,\n          token: \"WETH\",\n          unwrapMethod: \"withdraw\",\n          address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n        }\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      label: \"Cover Protocol\",\n      route: \"cover-protocol\",\n      subComponent: CoverProtocol,\n      image: \"images/protocols/cover-logo.svg\",\n      desc: \"Get your Idle Portfolio covered against Smart Contract risk\",\n      fileClaimUrl:\n        \"https://app.coverprotocol.com/app/claims/new?protocol=IDLE\",\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: \"CoverMint\",\n          address: \"0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0\"\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\n        \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      depositEnabled: false,\n      icon: \"FileDownload\",\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\n        \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      label: \"Token Migration\",\n      desc:\n        \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      icon: \"AddCircleOutline\",\n      route: \"add-funds\",\n      label: \"Add Funds\",\n      desc: \"Buy tokens with your Bank account, Credit card or Ethereum Wallet\",\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams =\n            globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency\n              ? props.tokenConfig.wyre.destCurrency\n              : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n              ? props.tokenConfig.ramp.swapAsset\n              : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n            ? props.tokenConfig.transak.currencyCode\n            : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n              ? props.tokenConfig.moonpay.currencyCode\n              : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n              connectorName !== \"Injected\" &&\n              window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                    window.RimbleWeb3_context.connectorName.toLowerCase()\n                  ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aFEI',\n            enabled:true,\n            functions:{},\n            name:'aavev2',\n            address:'0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null,clear_all=false) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        // Clear cached data\n        this.clearCachedData(()=>{\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n          this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n        },true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n"],"sourceRoot":""}