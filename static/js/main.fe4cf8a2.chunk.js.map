{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","CustomField/CustomField.js","CustomList/CustomList.js","RoundButton/RoundButton.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","BatchDeposit/BatchDeposit.js","IconBox/IconBox.js","SendTxWithBalance/SendTxWithBalance.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","cachedData","idleSpeeds","_context7","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","_callee8","blocksPerYear","distribution","_context8","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","getCachedData","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","strategyIcon","strategy","strategyName","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","CustomComponent","customValue","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","CustomList","rows","rowIndex","RoundButton","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","curvezapin","curvezapout","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","getAccountPortfolio","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","src_CustomList_CustomList","image","src_RoundButton_RoundButton","goToSection","route","src_AssetsList_AssetsList","borderBottom","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","migrationEnabledCallback","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","callbackPermit","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","permitContract","functionInfo","nonceMethod","expiry","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","functions","f","call","signPermit","permitName","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","contractApproved","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","src_TxProgressBar_TxProgressBar","src_FastBalanceSelector_FastBalanceSelector","functionName","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","callbackReceiptClaim","_this7","canExecuteBatch","strategyDefaultValue","s","connectAndValidateAccount","togglePermitEnabled","src_Migrate_Migrate","IconBox","SendTxWithBalance","getFastBalanceSelector","checkContractApproved","contractInfo","executeTx","_amount","params","methodName","methodParams","contractName","getTransactionParams","approveCallback","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","link","src_ExtLink_ExtLink","infoBox","src_IconBox_IconBox","balanceSelectorInfo","approveDescription","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","transactionSucceeded","collateral","selectedActionChanged","inputValueChanged","updateData","balancerTokenConfig","tokens","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","dashboardUrl","fixedAmount","mintedClaimLog","txReceipt","logs","log","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","console","collateralAmount","claimTokenBalance","noClaimTokenBalance","hasMintedTokens","balancerPoolClaimBalance","balancerPoolNoClaimBalance","contract","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","src_SendTxWithBalance_SendTxWithBalance","components_BuyModal","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","coverProtocol","subComponent","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref25","_callee19","_context19","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref33","_callee30","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args30","_context30","_x32","_ref34","_callee31","_context31","_x33","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee32","contractPaused","_args32","_context32","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref36","_callee35","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context35","allocationPromise","_ref37","_callee33","_context33","lastAmounts","_x35","_x36","availableTokenPromise","_ref38","_callee34","_context34","_x37","_x38","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x34","_ref39","_callee36","_context36","_x39","_x40","_ref40","_callee37","signedParameters","callback_receipt","_contract$methods","_context37","getGasPrice","once","confirmationNumber","receipt","_x41","_x42","_x43","_x44","_x45","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","soliditySHA3","toBuffer","_ref41","_callee38","biconomyInfo","res","_context38","headers","x-api-key","_x46","sendTxWithPermit","_ref42","_callee39","_contract$methods2","messageToSign","_this$getSignaturePar","_context39","_address","personal","sign","_x47","_x48","_x49","_x50","_x51","_x52","_ref43","_callee40","_this$getSignaturePar2","_context40","getNonce","_x53","_x54","_x55","_x56","signPermitEIP2612","_ref44","_callee41","erc20Name","owner","spender","deadline","domain","domainData","_context41","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","now","substring","_x57","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_ref45","_callee42","baseContractName","holder","spenderContractName","callback_permit","baseContract","spenderContract","permitConfig","_args42","_context42","net","getId","response","permitParams","methodAbi","_jsonInterface","useNonce","inputs","unshift","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","sendSignedTx","_ref46","_callee43","MetaTransaction","dataToSign","_context43","_x74","_x75","_x76","_x77","_x78","_ref47","_callee44","contractAddr","walletAddr","allowance","_context44","getAllowance","_x79","_x80","_x81","_ref48","_callee45","_context45","_x82","_x83","_x84","txData","toTwosComplement","_ref49","_callee46","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref50","_ref51","curveAvgBuyPrice","curveTokenBalance","_ref52","_ref53","amountLentCurve1","redeemableBalanceCurve","_ref54","_ref55","earningPerYear","_ref56","_ref57","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref58","_ref59","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref60","_ref61","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref62","_ref63","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref64","_ref65","amountLentCurve2","redeemableBalanceCurve1","_ref66","_ref67","redeemableBalance2","_args46","_context46","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x85","_x86","_x87","_x88","_ref68","_callee47","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args47","_context47","_x89","clearCachedData","useLocalStorage","_ref69","_callee48","_ref70","_ref71","idleTokensTotalSupply","userShare","_context48","_x90","_x91","_callee50","_args50","_context50","_ref73","_callee49","coverageTokens","protocolImage","_context49","utc","_x92","_callee52","_args52","_context52","_ref75","_callee51","_ref76","_ref77","_context51","_x93","_ref78","_callee53","fixDecimals","_ref79","_ref80","_args53","_context53","_x94","_x95","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref81","_callee54","_context54","getProtocolBalance","_x96","_x97","_ref82","_callee55","_context55","_x98","_x99","getAprs","_ref83","_callee56","_context56","_x100","genericIdleCall","_ref84","_callee57","callParams","_args57","_context57","_x101","estimateGas","_ref85","_callee58","_contract$methods3","_args58","_context58","_x102","_x103","getTxDecodedLogs","_ref86","_callee60","logAddr","decodeLogs","internalTransfers","_context60","_ref87","_callee59","_context59","_x108","_x109","_x104","_x105","_x106","_x107","getBlockNumber","_callee61","_context61","getContractPastEvents","_ref89","_callee62","_args62","_context62","getPastEvents","_x110","_x111","_ref90","_callee63","_contract$methods4","_args63","_context63","_x112","_x113","_ref91","_callee64","_args64","_context64","_x114","_x115","apr2apy","getUnlentBalance","_ref92","_callee65","unlentBalance","_context65","_x116","_ref93","_callee66","_args66","_context66","_x117","_ref94","_callee68","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args68","_context68","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref95","_callee67","_ref96","_ref97","protocolBalance","_context67","_x119","_x120","getGovTokensBalances","total","getTokenConversionRate","_x118","getUniswapConversionRate_path","_ref98","_callee69","unires","_context69","_x121","_ref99","_callee70","tokenConfigFrom","tokenConfigDest","_context70","_x122","_x123","getCurveDepositedTokens","_ref100","_callee71","idleTokensBalances","remainingCurveTokens","_args71","_context71","_x124","getCurveUnevenTokenAmounts","_ref101","_callee72","amounts","max_burn_amount","unevenAmounts","_context72","getCurveDepositContract","_x125","_x126","_callee73","curveRatesInfo","_context73","strategyTokens","getCurveAPYContract","_callee74","blocksForPrevTokenPrice","_ref104","_ref105","prevTokenPrice","blocksMultiplier","curveAPR","_context74","getCurveTokenSupply","_callee75","_context75","getCurvePoolContract","_callee76","_args76","_context76","_callee77","_args77","_context77","_ref109","_callee78","_ref110","_ref111","_context78","_x127","_callee79","depositContractInfo","_context79","getCurveZapContract","_callee80","zapContractInfo","_context80","_callee81","poolContractInfo","_context81","getCurveSwapContract","_callee82","_context82","getCurveIdleTokensAmounts","_callee84","max_slippage","curveTokenSupply","curveTokenShare","_args84","_context84","_ref117","_callee83","curveIdleTokens","_context83","_x128","getCurveTokensAmounts","_callee86","useCoinIndex","_args86","_context86","_ref119","_callee85","_ref120","_ref121","totalTokenSupply","_context85","_x129","getCurveAmounts","_ref122","_callee88","_args88","_context88","_ref123","_callee87","_context87","_x132","_x130","_x131","getCurveTokenAmount","_ref124","_callee89","_args89","_context89","_x133","getCurveSlippage","_ref125","_callee90","uneven_amounts","_ref126","_ref127","virtualPrice","Sv","_args90","_context90","_x134","_x135","getCompAPR","_ref128","_callee91","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args91","_context91","_x136","_x137","getCompSpeed","_ref129","_callee92","cTokenAddress","compSpeed","_context92","_x138","_ref130","_callee93","annualize","cTokenInfo","compoundAllocationPerc","_ref131","_ref132","cTokenTotalSupply","compoundPoolShare","_args93","_context93","_x139","_callee95","_args95","_context95","_ref134","_callee94","_ref135","_ref136","_context94","_x140","_callee97","_args97","_context97","_ref138","_callee96","_ref139","_ref140","compApr","_context96","_x141","getTokensCsv","_callee100","csv","_context100","prototype","sum","pv","cv","avg","_ref142","_callee99","_context99","_ref143","_callee98","header","aprAvg","scoreAvg","lastRow","_context98","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x143","_x142","_callee102","_args102","_context102","_ref145","_callee101","compTokenBalance","_context101","_x144","speed","getGovTokensUserDistributionSpeed","_ref146","_callee104","govTokensUserDistribution","_args104","_context104","_ref147","_callee103","_context103","_x146","_x145","_ref148","_callee106","govTokensDistribution","_args106","_context106","_ref149","_callee105","govSpeed","_context105","_x148","_x147","_ref150","_callee108","_args108","_context108","_ref151","_callee107","_ref152","_ref153","compoundInfo","_context107","_x151","_x149","_x150","_callee110","_args110","_context110","_ref155","_callee109","tokenConversionRate","fromTokenConfig","_context109","_x152","getGovTokenConfigByAddress","_callee111","checkShowBalance","govTokensEarnings","_args111","_context111","acc","govTokenAmount","_callee114","govTokenConfigForced","_args114","_context114","_ref158","_callee113","govTokensAmounts","_context113","_ref159","_callee112","govTokenAddress","_context112","_x154","_x155","_x153","_callee115","_args115","_context115","_callee116","_ref162","_ref163","gain","fees","_args116","_context116","_ref164","_callee117","_args117","_context117","_x156","getAggregatedStats","_callee121","avgAPR","totalAUM","_args121","_context121","_ref166","_callee120","_context120","_ref167","_callee119","oldTokenAllocation","oldTokenTotalAllocation","_context119","_ref168","_callee118","_ref169","_ref170","tokenBalanceConverted","_context118","_x159","_x158","_x157","getTokenApy","_ref171","_callee122","_context122","_x160","_callee125","_args125","_context125","_ref173","_callee124","_context124","_ref174","_callee123","_ref175","_context123","_x162","_x161","getProtocolsTokensBalances","_callee127","tokenBalances","minTokenBalance","protocolsTokens","_args127","_context127","_ref177","_callee126","tokenContract","_context126","_x163","_ref178","_callee128","_args128","_context128","_x164","_x165","_x166","_ref179","_callee129","_args129","_context129","_x167","_x168","_ref180","_callee130","_ref181","_ref182","_context130","protocolScore","getTokenScoreApi","_x169","_x170","_ref183","_callee131","_context131","_x171","_x172","_ref184","_callee133","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args133","_context133","_ref185","_callee132","addrIndex","protocolApr","protocolApy","_context132","_x174","_x175","_x173","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","react_router_dom","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Button","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","redeemUnderlying","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","setMaxSlippage","initToken","normalizedAmount","withdrawSlippage","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","calculateSlippage","loadSelectedTokenConfig","curveConfig","min_amounts","coin_index","min_amount","showSlippage","curveTokenName","selectDestinationToken","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","batchDepositDepositEnabled","showBatchDeposit","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_ShareModal","CardIconButton","useIconOnly","iconColor","iconBgColor","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","getMigrationParams","idleTokenBalanceChanged","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","_args7","getTimelockDelay","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","_args14","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args17","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args21","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","constant","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","timelockDelay","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.fe4cf8a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"active\":\"DashboardCard_active__2XLas\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import React, { Component } from 'react';\nimport { Text, Icon, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = this.functionsUtil.getArrayPath(fieldPath,this.props.row);\n    if (customValue){\n      switch (fieldType){\n        case 'image':\n          CustomComponent = Image;\n          fieldProps.src = customValue;\n        break;\n        case 'number':\n          customValue = this.functionsUtil.BNify(customValue).toString();\n          CustomComponent = SmartNumber;\n          fieldProps.number = customValue;\n        break;\n        case 'icon':\n          CustomComponent = Icon;\n          fieldProps.name = customValue;\n        break;\n        default:\n          CustomComponent = Text;\n          componentHasChildren = true;\n        break;\n      }\n      // Add custom field extra props\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        curvein:'CurveIn',\n        curveout:'CurveOut',\n        curvezapin:'CurveZapIn',\n        curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Image } from \"rimble-ui\";\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n            tokenEarnings\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account),\n            this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          // console.log(token,tokenEarningsPerc.toFixed(5),amountLentToken.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings;\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                (this.state.activeCoverages || (coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0))) && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Active Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                    {\n                      this.state.activeCoverages ? (\n                        <CustomList\n                          rows={this.state.activeCoverages}\n                          cols={[\n                            {\n                              title:'PROTOCOL',\n                              props:{\n                                width:[0.37,0.2]\n                              },\n                              fields:[\n                                {\n                                  type:'image',\n                                  path:['protocolImage'],\n                                  props:{\n                                    mr:[1,2],\n                                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                                  }\n                                },\n                                {\n                                  type:'text',\n                                  path:['protocolName'],\n                                }\n                              ]\n                            },\n                            {\n                              title:'BALANCE',\n                              props:{\n                                width:[0.37, 0.23],\n                              },\n                              fields:[\n                                {\n                                  type:'number',\n                                  path:['balance'],\n                                  props:{\n                                    decimals: 4,\n                                  }\n                                },\n                                {\n                                  type:'text',\n                                  path:['token'],\n                                  props:{\n                                    ml:[1,2]\n                                  }\n                                }\n                              ]\n                            },\n                            {\n                              mobile:false,\n                              title:'EXPIRATION DATE',\n                              props:{\n                                width:0.23,\n                                justifyContent:['center','flex-start']\n                              },\n                              fields:[\n                                {\n                                  type:'text',\n                                  path:['expirationDate'],\n                                  props:{\n                                    \n                                  }\n                                },\n                              ]\n                            },\n                            {\n                              mobile:false,\n                              title:'PORTFOLIO COVERAGE',\n                              props:{\n                                width:0.23,\n                                justifyContent:['center','flex-start']\n                              },\n                              fields:[\n                                {\n                                  type:'text',\n                                  path:['portfolioCoverage'],\n                                  props:{\n                                    \n                                  }\n                                },\n                              ]\n                            },\n                            {\n                              title:'STATUS',\n                              props:{\n                                width:[0.26,0.15],\n                                justifyContent:['center','flex-start']\n                              },\n                              fields:[\n                                {\n                                  type:'icon',\n                                  name:'custom',\n                                  path:['statusIcon'],\n                                  props:{\n                                    mr:2,\n                                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                                  }\n                                },\n                                {\n                                  name:'custom',\n                                  path:['status'],\n                                  props:{\n                                    style:{\n                                      textTransform:'capitalize'\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          ]}\n                          {...this.props}\n                        />\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:[3,4],\n                            width:[1,'auto'],\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Image\n                              mb={2}\n                              height={['1.8em','2.2em']}\n                              src={coverProtocolConfig.image}\n                            />\n                            <Text\n                              mb={1}\n                              fontSize={[2,4]}\n                              fontWeight={500}\n                              textAlign={'center'}\n                            >\n                              You don't have an active coverage\n                            </Text>\n                            <Text\n                              mb={2}\n                              color={'blue'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                              hoverColor={'blue'}\n                              textAlign={'center'}\n                            >\n                              Cover Protocol provides coverage against Smart-Contract attacks\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:1,\n                                width:'auto',\n                                minHeight:'40px',\n                                mainColor:'redeem',\n                                size:this.props.isMobile ? 'small' : 'medium'\n                              }}\n                              handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}/Claim`) }\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'center'}\n                              >\n                                <Text\n                                  color={'white'}\n                                  fontSize={[1,2]}\n                                  fontWeight={500}\n                                >\n                                  Get Covered\n                                </Text>\n                                <Icon\n                                  ml={1}\n                                  size={'1.3em'}\n                                  name={'KeyboardArrowRight'}\n                                />\n                              </Flex>\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          contrastColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.state.oldIdleTokens && (\n                                <Box\n                                  mb={1}\n                                  width={1}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                </Box>\n                              )\n                            }\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for the batch to be executed\n                      </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  canExecuteBatch && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              display={'block'}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            <Link\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={this.execute.bind(this)}\n                            >\n                              Execute Batch\n                            </Link>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={2}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, null, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || null) : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n      let [\n        swapFee,\n        covTokens,\n        tokenPrice,\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.contractInfo.name,'getSwapFee'),\n        this.functionsUtil.genericContractCall(this.state.contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n        this.functionsUtil.genericContractCall(this.state.contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n      ]);\n\n      if (tokenPrice && swapFee && covTokens){\n        swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n        return {\n          amount,\n          swapFee,\n          covTokens,\n          tokenPrice,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} Claim and No-Claim`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(swapInfo.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo,\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(swapInfo.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address );\n        const mintedNoClaimLog = tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address );\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} Claim</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} No-Claim</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address );\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address );\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    const steps = [];\n    let infoBox = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(claimTokenConfig.balancerPool.name,claimTokenConfig.balancerPool.address,claimTokenConfig.balancerPool.abi),\n      this.props.initContract(noClaimTokenConfig.balancerPool.name,noClaimTokenConfig.balancerPool.address,noClaimTokenConfig.balancerPool.abi)\n    ]);\n\n    // Get Claim token balance\n    const claimTokenBalance = await this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account);\n\n    // Get No-Claim token balance\n    const noClaimTokenBalance = await this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account);\n\n    // Check if user has both Claim and No-Claim tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Get Claim token balance\n    const balancerPoolClaimBalance = await this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account);\n\n    // Get Claim token balance\n    const balancerPoolNoClaimBalance = await this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account);\n\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n\n        approveDescription = `Approve the Cover Protocol contract`;\n        infoBox = {\n          icon:'MonetizationOn',\n          text:`Stake ${this.state.selectedToken} to mint both Claim and No-Claim tokens in a 1:1 ratio`\n        };\n        // Add Approve Step\n        steps.push({\n          icon:'LooksOne',\n          description:approveDescription,\n          completed:this.state.contractApproved\n        });\n        // Add Mint Step\n        steps.push({\n          icon:'LooksTwo',\n          completed:hasMintedTokens,\n          description:`Mint Claim and No-Claim tokens`\n        });\n        // Add Liquidity to Balancer Step\n        steps.push({\n          icon:'Looks3',\n          description:`Add your Claim tokens to the Balancer Pool`,\n          completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n          link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n        });\n        // Add Liquidity to Balancer Step\n        steps.push({\n          icon:'Looks4',\n          description:`Add your No-Claim tokens to the Balancer Pool`,\n          completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n          link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n        });\n      break;\n      case 'NoClaim':\n        contractInfo = claimTokenConfig.balancerPool;\n        if (this.state.swapInfo){\n          collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n          tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n          infoBox = {\n            icon:'VerifiedUser',\n            text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your No-Claim tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n          };\n        } else {\n          infoBox = {\n            icon:'VerifiedUser',\n            text:`No-Claim tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n          };\n        }\n\n        // Add Approve Step\n        approveDescription = `Approve the No-Claim Balancer Pool contract`;\n        steps.push({\n          icon:'LooksOne',\n          description:approveDescription,\n          completed:this.state.contractApproved\n        });\n        // Add Mint Step\n        steps.push({\n          icon:'LooksTwo',\n          completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n          description:`Buy No-Claim tokens with your ${this.state.selectedToken}`\n        });\n      break;\n      case 'Claim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n        if (this.state.swapInfo){\n          collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n          tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n          const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n          infoBox = {\n            icon:'BeachAccess',\n            text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your Claim tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n          };\n        } else {\n          infoBox = {\n            icon:'BeachAccess',\n            text:`Claim tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n          };\n        }\n\n        // Add Approve Step\n        approveDescription = `Approve the No-Claim Balancer Pool contract`;\n        steps.push({\n          icon:'LooksOne',\n          description:approveDescription,\n          completed:this.state.contractApproved\n        });\n        // Add Mint Step\n        steps.push({\n          icon:'LooksTwo',\n          completed:claimTokenBalance && claimTokenBalance.gt(0),\n          description:`Buy Claim tokens with your ${this.state.selectedToken}`\n        });\n      break;\n      default:\n      break;\n    }\n    if (contractInfo){\n      const transactionSucceeded = false;\n      this.setState({\n        steps,\n        infoBox,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(new Date().getTime()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).format('YYYY-MM-DD HH:mm:ss');\n        output.push({\n          data:c,\n          value:expirationDate,\n          label:expirationDate\n        });\n      }\n      return output;\n    },[]);\n    \n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                              buttonStyle={{\n                                boxShadow:isMint ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy Claim'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                              buttonStyle={{\n                                boxShadow:isBuyClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy No-Claim'}\n                              imageSrc={'images/noclaim.svg'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                              buttonStyle={{\n                                boxShadow:isBuyNoClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.4',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    coverProtocol:{\n      enabled:true,\n      route:'cover-protocol',\n      label:'Cover Protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.png',\n      desc:'Buy Coverage for your Idle portfolio or provide liquidity to Cover Protocol',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(new Date().getTime()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      cachedData = this.props.cachedData[key.toLowerCase()];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key.toLowerCase()]){\n        cachedData = cachedData[key.toLowerCase()];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(new Date().getTime()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const status = coverage.expirationTimestamp*1000<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDeposits = async (account=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits\n            };\n          }\n        }\n      }\n    });\n    return batchedDeposits;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    /*\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    */\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      if (!this.BNify(tokenBalance).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                width={1}\n                my={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && this.state.showRefreshIdleSpeed &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Icon, Text, Box, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      {\n                        tool.image ? (\n                          <Image\n                            my={[0,2]}\n                            height={'2.2em'}\n                            src={tool.image}\n                          />\n                        ) : tool.icon && (\n                          <Icon\n                            my={[0,2]}\n                            size={'3em'}\n                            name={tool.icon}\n                          />\n                        )\n                      }\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();;\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    const showBatchDeposit = batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showBatchDeposit &&\n                        <Flex\n                          p={2}\n                          mt={3}\n                          width={1}\n                          borderRadius={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'center'}\n                          backgroundColor={'white'}\n                          border={`1px solid ${this.props.theme.colors.primary}`}\n                        >\n                          <Link\n                            textAlign={'center'}\n                            hoverColor={'primary'}\n                            href={`/#/dashboard/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                          >\n                            Gas fees too high? Save gas with our Batch Deposit!\n                          </Link>\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'primary'}\n                            name={'LocalGasStation'}\n                          />\n                        </Flex>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        blockNumber,\n        timelockDelay,\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.functionsUtil.getBlockNumber(),\n        this.governanceUtil.getTimelockDelay(),\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        blockNumber,\n        timelockDelay,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      blockNumber={this.state.blockNumber}\n                      loadUserData={this.loadData.bind(this)}\n                      timelockDelay={this.state.timelockDelay}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    const cachedKeyFound = this.state.cachedData[key.toLowerCase()];\n    const currentTime = parseInt(new Date().getTime()/1000);\n\n    if (!cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) ){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  clearCachedData={this.clearCachedData.bind(this)}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};"],"sourceRoot":""}